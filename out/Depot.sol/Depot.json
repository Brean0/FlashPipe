{
  "abi": [
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "target",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "callData",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "clipboard",
              "type": "bytes"
            }
          ],
          "internalType": "struct AdvancedPipeCall[]",
          "name": "pipes",
          "type": "tuple[]"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "advancedPipe",
      "outputs": [
        {
          "internalType": "bytes[]",
          "name": "results",
          "type": "bytes[]"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC1155",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        }
      ],
      "name": "batchTransferERC1155",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "target",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "internalType": "struct PipeCall",
          "name": "p",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "etherPipe",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "result",
          "type": "bytes"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes[]",
          "name": "data",
          "type": "bytes[]"
        }
      ],
      "name": "farm",
      "outputs": [
        {
          "internalType": "bytes[]",
          "name": "results",
          "type": "bytes[]"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "target",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "internalType": "struct PipeCall[]",
          "name": "pipes",
          "type": "tuple[]"
        }
      ],
      "name": "multiPipe",
      "outputs": [
        {
          "internalType": "bytes[]",
          "name": "results",
          "type": "bytes[]"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "permitDeposit",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "address[]",
          "name": "tokens",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "permitDeposits",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20Permit",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "permitERC20",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC4494",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "sig",
          "type": "bytes"
        }
      ],
      "name": "permitERC721",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "permitToken",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "target",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "internalType": "struct PipeCall",
          "name": "p",
          "type": "tuple"
        }
      ],
      "name": "pipe",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "result",
          "type": "bytes"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "target",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "internalType": "struct PipeCall",
          "name": "p",
          "type": "tuple"
        }
      ],
      "name": "readPipe",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "result",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "season",
          "type": "uint32"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferDeposit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "bdv",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint32[]",
          "name": "seasons",
          "type": "uint32[]"
        },
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        }
      ],
      "name": "transferDeposits",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "bdvs",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC1155",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferERC1155",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC721",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "transferERC721",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "enum From",
          "name": "fromMode",
          "type": "uint8"
        },
        {
          "internalType": "enum To",
          "name": "toMode",
          "type": "uint8"
        }
      ],
      "name": "transferToken",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b50611fd4806100206000396000f3fe60806040526004361061010e5760003560e01c80636e47d07b116100a5578063b442b39811610074578063cabec62b11610059578063cabec62b1461025c578063d5770dc71461026f578063dd756c4f146102825761010e565b8063b442b39814610236578063b452c7ae146102495761010e565b80636e47d07b146101dd5780637c516e94146101f05780639e32d26114610203578063a9412a59146102235761010e565b80631aca6376116100e15780631aca637614610184578063300dd6cf146101975780634935ed43146101b75780636204aa43146101ca5761010e565b806308e1a0ab146101135780630a7e880c1461013c5780630d2615b114610151578063120b570214610171575b600080fd5b610126610121366004611739565b6102a2565b6040516101339190611d64565b60405180910390f35b61014f61014a366004611553565b610338565b005b61016461015f3660046110a6565b6103b1565b6040516101339190611d20565b61014f61017f36600461114b565b610489565b61014f6101923660046116b3565b61050a565b6101aa6101a53660046112eb565b610571565b6040516101339190611b9f565b61014f6101c5366004611605565b610674565b61014f6101d8366004611598565b6106df565b6101266101eb36600461176c565b6107b6565b61014f6101fe36600461114b565b61084f565b6102166102113660046111cb565b610894565b6040516101339190611e39565b61014f6102313660046114c1565b610959565b61014f61024436600461114b565b6109f7565b6101aa6102573660046113b4565b610a2f565b6101aa61026a3660046112eb565b610acb565b61014f61027d36600461122c565b610b5d565b34801561028e57600080fd5b5061012661029d366004611739565b610be4565b6040516308e1a0ab60e01b815260609073b1be0000bfdcddc92a8290202830c4ef689dceaa906308e1a0ab906102dc908590600401611e26565b600060405180830381600087803b1580156102f657600080fd5b505af115801561030a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610332919081019061148e565b92915050565b60408051600081526020810191829052637921219560e11b9091526001600160a01b0385169063f242432a9061037990339087908790879060248101611a0c565b600060405180830381600087803b15801561039357600080fd5b505af11580156103a7573d6000803e3d6000fd5b5050505050505050565b60606001600160a01b03881633146103e45760405162461bcd60e51b81526004016103db90611db8565b60405180910390fd5b604051630d2615b160e01b815273c1e088fc1323b20bcbee9bd1b9fc9546db5624c590630d2615b1906104279033908b908b908b908b908b908b906004016118c4565b600060405180830381600087803b15801561044157600080fd5b505af1158015610455573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261047d91908101906113fe565b98975050505050505050565b604051630905ab8160e11b815273c1e088fc1323b20bcbee9bd1b9fc9546db5624c59063120b5702906104ce908b908b908b908b908b908b908b908b90600401611a44565b600060405180830381600087803b1580156104e857600080fd5b505af11580156104fc573d6000803e3d6000fd5b505050505050505050505050565b604051632142170760e11b81526001600160a01b038416906342842e0e9061053a903390869086906004016119e8565b600060405180830381600087803b15801561055457600080fd5b505af1158015610568573d6000803e3d6000fd5b50505050505050565b60608167ffffffffffffffff8111801561058a57600080fd5b506040519080825280602002602001820160405280156105be57816020015b60608152602001906001900390816105a95790505b50905060005b8281101561066d57600080308686858181106105dc57fe5b90506020028101906105ee9190611e42565b6040516105fc9291906118b4565b600060405180830381855af49150503d8060008114610637576040519150601f19603f3d011682016040523d82523d6000602084013e61063c565b606091505b509150915061064b8282610c6e565b8084848151811061065857fe5b602090810291909101015250506001016105c4565b5092915050565b604051631d16906f60e21b81526001600160a01b0386169063745a41bc906106a6908790879087908790600401611b71565b600060405180830381600087803b1580156106c057600080fd5b505af11580156106d4573d6000803e3d6000fd5b505050505050505050565b60008260038111156106ed57fe5b141561070d576107086001600160a01b038616338686610cb9565b6107af565b600182600381111561071b57fe5b14156107975760405163d3f4ec6f60e01b815273c1e088fc1323b20bcbee9bd1b9fc9546db5624c59063d3f4ec6f906107609088903390899089908890600401611d77565b600060405180830381600087803b15801561077a57600080fd5b505af115801561078e573d6000803e3d6000fd5b505050506107af565b60405162461bcd60e51b81526004016103db90611def565b5050505050565b6040516308e1a0ab60e01b815260609073b1be0000bfdcddc92a8290202830c4ef689dceaa906308e1a0ab9084906107f2908790600401611e26565b6000604051808303818588803b15801561080b57600080fd5b505af115801561081f573d6000803e3d6000fd5b50505050506040513d6000823e601f3d908101601f19168201604052610848919081019061148e565b9392505050565b604051631f145ba560e21b815273c1e088fc1323b20bcbee9bd1b9fc9546db5624c590637c516e94906104ce908b908b908b908b908b908b908b908b90600401611a44565b60006001600160a01b03861633146108be5760405162461bcd60e51b81526004016103db90611db8565b604051639e32d26160e01b815273c1e088fc1323b20bcbee9bd1b9fc9546db5624c590639e32d261906108fd903390899089908990899060040161194d565b602060405180830381600087803b15801561091757600080fd5b505af115801561092b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061094f91906117af565b9695505050505050565b6001600160a01b038616632eb2c2d633878787878760006040519080825280601f01601f19166020018201604052801561099a576020820181803683370190505b506040518863ffffffff1660e01b81526004016109bd9796959493929190611986565b600060405180830381600087803b1580156109d757600080fd5b505af11580156109eb573d6000803e3d6000fd5b50505050505050505050565b60405163d505accf60e01b81526001600160a01b0389169063d505accf906104ce908a908a908a908a908a908a908a90600401611b30565b604051630e0506af60e11b815260609073b1be0000bfdcddc92a8290202830c4ef689dceaa90631c0a0d5e908490610a6d9088908890600401611bff565b6000604051808303818588803b158015610a8657600080fd5b505af1158015610a9a573d6000803e3d6000fd5b50505050506040513d6000823e601f3d908101601f19168201604052610ac3919081019061132b565b949350505050565b60405163cabec62b60e01b815260609073b1be0000bfdcddc92a8290202830c4ef689dceaa9063cabec62b90610b079086908690600401611cb2565b600060405180830381600087803b158015610b2157600080fd5b505af1158015610b35573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610848919081019061132b565b60405163d5770dc760e01b815273c1e088fc1323b20bcbee9bd1b9fc9546db5624c59063d5770dc790610ba6908d908d908d908d908d908d908d908d908d908d90600401611a8e565b600060405180830381600087803b158015610bc057600080fd5b505af1158015610bd4573d6000803e3d6000fd5b5050505050505050505050505050565b60606000610bf5602084018461108a565b6001600160a01b0316610c0b6020850185611e42565b604051610c199291906118b4565b600060405180830381855afa9150503d8060008114610c54576040519150601f19603f3d011682016040523d82523d6000602084013e610c59565b606091505b5092509050610c688183610c6e565b50919050565b81610cb557604481511015610c8257600080fd5b60048101905080806020019051810190610c9c91906116f3565b60405162461bcd60e51b81526004016103db9190611d64565b5050565b604080516001600160a01b0380861660248301528416604482015260648082018490528251808303909101815260849091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166323b872dd60e01b179052610d28908590610d2e565b50505050565b6000610d83826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610de49092919063ffffffff16565b805190915015610ddf57808060200190516020811015610da257600080fd5b5051610ddf5760405162461bcd60e51b815260040180806020018281038252602a815260200180611f75602a913960400191505060405180910390fd5b505050565b6060610ac3848460008585610df885610f09565b610e49576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b600080866001600160a01b031685876040518082805190602001908083835b60208310610e875780518252601f199092019160209182019101610e68565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114610ee9576040519150601f19603f3d011682016040523d82523d6000602084013e610eee565b606091505b5091509150610efe828286610f13565b979650505050505050565b803b15155b919050565b60608315610f22575081610848565b825115610f325782518084602001fd5b8160405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610f7c578181015183820152602001610f64565b50505050905090810190601f168015610fa95780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b6000610fca610fc584611ec9565b611e87565b9050828152838383011115610fde57600080fd5b610848836020830184611f30565b60008083601f840112610ffd578182fd5b50813567ffffffffffffffff811115611014578182fd5b602083019150836020808302850101111561102e57600080fd5b9250929050565b600082601f830112611045578081fd5b61084883835160208501610fb7565b600060408284031215610c68578081fd5b803563ffffffff81168114610f0e57600080fd5b803560ff81168114610f0e57600080fd5b60006020828403121561109b578081fd5b813561084881611f5c565b600080600080600080600060a0888a0312156110c0578283fd5b87356110cb81611f5c565b965060208801356110db81611f5c565b955060408801356110eb81611f5c565b9450606088013567ffffffffffffffff80821115611107578485fd5b6111138b838c01610fec565b909650945060808a013591508082111561112b578384fd5b506111388a828b01610fec565b989b979a50959850939692959293505050565b600080600080600080600080610100898b031215611167578182fd5b883561117281611f5c565b9750602089013561118281611f5c565b9650604089013561119281611f5c565b955060608901359450608089013593506111ae60a08a01611079565b925060c0890135915060e089013590509295985092959890939650565b600080600080600060a086880312156111e2578283fd5b85356111ed81611f5c565b945060208601356111fd81611f5c565b9350604086013561120d81611f5c565b925061121b60608701611065565b949793965091946080013592915050565b6000806000806000806000806000806101008b8d03121561124b578384fd5b8a3561125681611f5c565b995060208b013561126681611f5c565b985060408b013567ffffffffffffffff80821115611282578586fd5b61128e8e838f01610fec565b909a50985060608d01359150808211156112a6578586fd5b506112b38d828e01610fec565b90975095505060808b013593506112cc60a08c01611079565b925060c08b0135915060e08b013590509295989b9194979a5092959850565b600080602083850312156112fd578182fd5b823567ffffffffffffffff811115611313578283fd5b61131f85828601610fec565b90969095509350505050565b6000602080838503121561133d578182fd5b825167ffffffffffffffff811115611353578283fd5b8301601f81018513611363578283fd5b8051611371610fc582611eab565b81815283810190838501865b848110156113a6576113948a888451890101611035565b8452928601929086019060010161137d565b509098975050505050505050565b6000806000604084860312156113c8578081fd5b833567ffffffffffffffff8111156113de578182fd5b6113ea86828701610fec565b909790965060209590950135949350505050565b60006020808385031215611410578182fd5b825167ffffffffffffffff811115611426578283fd5b8301601f81018513611436578283fd5b8051611444610fc582611eab565b8181528381019083850185840285018601891015611460578687fd5b8694505b83851015611482578051835260019490940193918501918501611464565b50979650505050505050565b60006020828403121561149f578081fd5b815167ffffffffffffffff8111156114b5578182fd5b610ac384828501611035565b600080600080600080608087890312156114d9578384fd5b86356114e481611f5c565b955060208701356114f481611f5c565b9450604087013567ffffffffffffffff80821115611510578586fd5b61151c8a838b01610fec565b90965094506060890135915080821115611534578384fd5b5061154189828a01610fec565b979a9699509497509295939492505050565b60008060008060808587031215611568578182fd5b843561157381611f5c565b9350602085013561158381611f5c565b93969395505050506040820135916060013590565b600080600080600060a086880312156115af578283fd5b85356115ba81611f5c565b945060208601356115ca81611f5c565b9350604086013592506060860135600481106115e4578182fd5b91506080860135600281106115f7578182fd5b809150509295509295909350565b600080600080600060a0868803121561161c578283fd5b853561162781611f5c565b9450602086013561163781611f5c565b93506040860135925060608601359150608086013567ffffffffffffffff811115611660578182fd5b8601601f81018813611670578182fd5b803561167e610fc582611ec9565b818152896020838501011115611692578384fd5b81602084016020830137908101602001929092525093969295509093509190565b6000806000606084860312156116c7578081fd5b83356116d281611f5c565b925060208401356116e281611f5c565b929592945050506040919091013590565b600060208284031215611704578081fd5b815167ffffffffffffffff81111561171a578182fd5b8201601f8101841361172a578182fd5b610ac384825160208401610fb7565b60006020828403121561174a578081fd5b813567ffffffffffffffff811115611760578182fd5b610ac384828501611054565b6000806040838503121561177e578182fd5b823567ffffffffffffffff811115611794578283fd5b6117a085828601611054565b95602094909401359450505050565b6000602082840312156117c0578081fd5b5051919050565b60008284527f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8311156117f8578081fd5b6020830280836020870137939093016020019283525090919050565b60008284528282602086013780602084860101526020601f19601f85011685010190509392505050565b60008151808452611856816020860160208601611f30565b601f01601f19169290920160200192915050565b6000813561187781611f5c565b6001600160a01b0316835261188f6020830183611eeb565b604060208601526118a4604086018284611814565b95945050505050565b60ff169052565b6000828483379101908152919050565b600060a082016001600160a01b03808b1684526020818b1681860152818a16604086015260a0606086015282915087835260c085019150889250835b888110156119295763ffffffff61191685611065565b1683529281019291810191600101611900565b5050838103608085015261193e8186886117c7565b9b9a5050505050505050505050565b6001600160a01b039586168152938516602085015291909316604083015263ffffffff9092166060820152608081019190915260a00190565b60006001600160a01b03808a16835280891660208401525060a060408301526119b360a0830187896117c7565b82810360608401526119c68186886117c7565b905082810360808401526119da818561183e565b9a9950505050505050505050565b6001600160a01b039384168152919092166020820152604081019190915260600190565b60006001600160a01b03808816835280871660208401525084604083015283606083015260a06080830152610efe60a083018461183e565b6001600160a01b03988916815296881660208801529490961660408601526060850192909252608084015260ff1660a083015260c082019290925260e08101919091526101000190565b60006101008083016001600160a01b03808f1685526020818f16818701528360408701528293508c8352610120860193508d9250845b8d811015611aeb578335611ad781611f5c565b831685529381019392810192600101611ac4565b505050508281036060840152611b0281898b6117c7565b915050856080830152611b1860a08301866118ad565b60c082019390935260e0015298975050505050505050565b6001600160a01b0397881681529590961660208601526040850193909352606084019190915260ff16608083015260a082015260c081019190915260e00190565b60006001600160a01b03861682528460208301528360408301526080606083015261094f608083018461183e565b6000602080830181845280855180835260408601915060408482028701019250838701855b82811015611bf257603f19888603018452611be085835161183e565b94509285019290850190600101611bc4565b5092979650505050505050565b602080825281810183905260009060408084018583028501820187855b888110156113a657878303603f190184528135368b9003605e19018112611c41578788fd5b8a0160608135611c5081611f5c565b6001600160a01b03168552611c6782890183611eeb565b828a880152611c798388018284611814565b92505050611c8987830183611eeb565b925085820388870152611c9d828483611814565b96890196955050509186019150600101611c1c565b602080825281810183905260009060408482028401810190840186845b87811015611d1357868403603f190183528135368a9003603e19018112611cf4578687fd5b611d00858b830161186a565b9450509184019190840190600101611ccf565b5091979650505050505050565b6020808252825182820181905260009190848201906040850190845b81811015611d5857835183529284019291840191600101611d3c565b50909695505050505050565b600060208252610848602083018461183e565b6001600160a01b0386811682528581166020830152841660408201526060810183905260a0810160028310611da857fe5b8260808301529695505050505050565b6020808252600e908201527f696e76616c69642073656e646572000000000000000000000000000000000000604082015260600190565b60208082526012908201527f4d6f6465206e6f7420737570706f727465640000000000000000000000000000604082015260600190565b600060208252610848602083018461186a565b90815260200190565b6000808335601e19843603018112611e58578283fd5b83018035915067ffffffffffffffff821115611e72578283fd5b60200191503681900382131561102e57600080fd5b60405181810167ffffffffffffffff81118282101715611ea357fe5b604052919050565b600067ffffffffffffffff821115611ebf57fe5b5060209081020190565b600067ffffffffffffffff821115611edd57fe5b50601f01601f191660200190565b6000808335601e19843603018112611f01578283fd5b830160208101925035905067ffffffffffffffff811115611f2157600080fd5b80360383131561102e57600080fd5b60005b83811015611f4b578181015183820152602001611f33565b83811115610d285750506000910152565b6001600160a01b0381168114611f7157600080fd5b5056fe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564a264697066735822122030cee306a2c586eff23c346c6e82c0821bfa4d962836d411541ec029f782a29064736f6c63430007060033",
    "sourceMap": "794:4152:0:-:0;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040526004361061010e5760003560e01c80636e47d07b116100a5578063b442b39811610074578063cabec62b11610059578063cabec62b1461025c578063d5770dc71461026f578063dd756c4f146102825761010e565b8063b442b39814610236578063b452c7ae146102495761010e565b80636e47d07b146101dd5780637c516e94146101f05780639e32d26114610203578063a9412a59146102235761010e565b80631aca6376116100e15780631aca637614610184578063300dd6cf146101975780634935ed43146101b75780636204aa43146101ca5761010e565b806308e1a0ab146101135780630a7e880c1461013c5780630d2615b114610151578063120b570214610171575b600080fd5b610126610121366004611739565b6102a2565b6040516101339190611d64565b60405180910390f35b61014f61014a366004611553565b610338565b005b61016461015f3660046110a6565b6103b1565b6040516101339190611d20565b61014f61017f36600461114b565b610489565b61014f6101923660046116b3565b61050a565b6101aa6101a53660046112eb565b610571565b6040516101339190611b9f565b61014f6101c5366004611605565b610674565b61014f6101d8366004611598565b6106df565b6101266101eb36600461176c565b6107b6565b61014f6101fe36600461114b565b61084f565b6102166102113660046111cb565b610894565b6040516101339190611e39565b61014f6102313660046114c1565b610959565b61014f61024436600461114b565b6109f7565b6101aa6102573660046113b4565b610a2f565b6101aa61026a3660046112eb565b610acb565b61014f61027d36600461122c565b610b5d565b34801561028e57600080fd5b5061012661029d366004611739565b610be4565b6040516308e1a0ab60e01b815260609073b1be0000bfdcddc92a8290202830c4ef689dceaa906308e1a0ab906102dc908590600401611e26565b600060405180830381600087803b1580156102f657600080fd5b505af115801561030a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610332919081019061148e565b92915050565b60408051600081526020810191829052637921219560e11b9091526001600160a01b0385169063f242432a9061037990339087908790879060248101611a0c565b600060405180830381600087803b15801561039357600080fd5b505af11580156103a7573d6000803e3d6000fd5b5050505050505050565b60606001600160a01b03881633146103e45760405162461bcd60e51b81526004016103db90611db8565b60405180910390fd5b604051630d2615b160e01b815273c1e088fc1323b20bcbee9bd1b9fc9546db5624c590630d2615b1906104279033908b908b908b908b908b908b906004016118c4565b600060405180830381600087803b15801561044157600080fd5b505af1158015610455573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261047d91908101906113fe565b98975050505050505050565b604051630905ab8160e11b815273c1e088fc1323b20bcbee9bd1b9fc9546db5624c59063120b5702906104ce908b908b908b908b908b908b908b908b90600401611a44565b600060405180830381600087803b1580156104e857600080fd5b505af11580156104fc573d6000803e3d6000fd5b505050505050505050505050565b604051632142170760e11b81526001600160a01b038416906342842e0e9061053a903390869086906004016119e8565b600060405180830381600087803b15801561055457600080fd5b505af1158015610568573d6000803e3d6000fd5b50505050505050565b60608167ffffffffffffffff8111801561058a57600080fd5b506040519080825280602002602001820160405280156105be57816020015b60608152602001906001900390816105a95790505b50905060005b8281101561066d57600080308686858181106105dc57fe5b90506020028101906105ee9190611e42565b6040516105fc9291906118b4565b600060405180830381855af49150503d8060008114610637576040519150601f19603f3d011682016040523d82523d6000602084013e61063c565b606091505b509150915061064b8282610c6e565b8084848151811061065857fe5b602090810291909101015250506001016105c4565b5092915050565b604051631d16906f60e21b81526001600160a01b0386169063745a41bc906106a6908790879087908790600401611b71565b600060405180830381600087803b1580156106c057600080fd5b505af11580156106d4573d6000803e3d6000fd5b505050505050505050565b60008260038111156106ed57fe5b141561070d576107086001600160a01b038616338686610cb9565b6107af565b600182600381111561071b57fe5b14156107975760405163d3f4ec6f60e01b815273c1e088fc1323b20bcbee9bd1b9fc9546db5624c59063d3f4ec6f906107609088903390899089908890600401611d77565b600060405180830381600087803b15801561077a57600080fd5b505af115801561078e573d6000803e3d6000fd5b505050506107af565b60405162461bcd60e51b81526004016103db90611def565b5050505050565b6040516308e1a0ab60e01b815260609073b1be0000bfdcddc92a8290202830c4ef689dceaa906308e1a0ab9084906107f2908790600401611e26565b6000604051808303818588803b15801561080b57600080fd5b505af115801561081f573d6000803e3d6000fd5b50505050506040513d6000823e601f3d908101601f19168201604052610848919081019061148e565b9392505050565b604051631f145ba560e21b815273c1e088fc1323b20bcbee9bd1b9fc9546db5624c590637c516e94906104ce908b908b908b908b908b908b908b908b90600401611a44565b60006001600160a01b03861633146108be5760405162461bcd60e51b81526004016103db90611db8565b604051639e32d26160e01b815273c1e088fc1323b20bcbee9bd1b9fc9546db5624c590639e32d261906108fd903390899089908990899060040161194d565b602060405180830381600087803b15801561091757600080fd5b505af115801561092b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061094f91906117af565b9695505050505050565b6001600160a01b038616632eb2c2d633878787878760006040519080825280601f01601f19166020018201604052801561099a576020820181803683370190505b506040518863ffffffff1660e01b81526004016109bd9796959493929190611986565b600060405180830381600087803b1580156109d757600080fd5b505af11580156109eb573d6000803e3d6000fd5b50505050505050505050565b60405163d505accf60e01b81526001600160a01b0389169063d505accf906104ce908a908a908a908a908a908a908a90600401611b30565b604051630e0506af60e11b815260609073b1be0000bfdcddc92a8290202830c4ef689dceaa90631c0a0d5e908490610a6d9088908890600401611bff565b6000604051808303818588803b158015610a8657600080fd5b505af1158015610a9a573d6000803e3d6000fd5b50505050506040513d6000823e601f3d908101601f19168201604052610ac3919081019061132b565b949350505050565b60405163cabec62b60e01b815260609073b1be0000bfdcddc92a8290202830c4ef689dceaa9063cabec62b90610b079086908690600401611cb2565b600060405180830381600087803b158015610b2157600080fd5b505af1158015610b35573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610848919081019061132b565b60405163d5770dc760e01b815273c1e088fc1323b20bcbee9bd1b9fc9546db5624c59063d5770dc790610ba6908d908d908d908d908d908d908d908d908d908d90600401611a8e565b600060405180830381600087803b158015610bc057600080fd5b505af1158015610bd4573d6000803e3d6000fd5b5050505050505050505050505050565b60606000610bf5602084018461108a565b6001600160a01b0316610c0b6020850185611e42565b604051610c199291906118b4565b600060405180830381855afa9150503d8060008114610c54576040519150601f19603f3d011682016040523d82523d6000602084013e610c59565b606091505b5092509050610c688183610c6e565b50919050565b81610cb557604481511015610c8257600080fd5b60048101905080806020019051810190610c9c91906116f3565b60405162461bcd60e51b81526004016103db9190611d64565b5050565b604080516001600160a01b0380861660248301528416604482015260648082018490528251808303909101815260849091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166323b872dd60e01b179052610d28908590610d2e565b50505050565b6000610d83826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610de49092919063ffffffff16565b805190915015610ddf57808060200190516020811015610da257600080fd5b5051610ddf5760405162461bcd60e51b815260040180806020018281038252602a815260200180611f75602a913960400191505060405180910390fd5b505050565b6060610ac3848460008585610df885610f09565b610e49576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b600080866001600160a01b031685876040518082805190602001908083835b60208310610e875780518252601f199092019160209182019101610e68565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114610ee9576040519150601f19603f3d011682016040523d82523d6000602084013e610eee565b606091505b5091509150610efe828286610f13565b979650505050505050565b803b15155b919050565b60608315610f22575081610848565b825115610f325782518084602001fd5b8160405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610f7c578181015183820152602001610f64565b50505050905090810190601f168015610fa95780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b6000610fca610fc584611ec9565b611e87565b9050828152838383011115610fde57600080fd5b610848836020830184611f30565b60008083601f840112610ffd578182fd5b50813567ffffffffffffffff811115611014578182fd5b602083019150836020808302850101111561102e57600080fd5b9250929050565b600082601f830112611045578081fd5b61084883835160208501610fb7565b600060408284031215610c68578081fd5b803563ffffffff81168114610f0e57600080fd5b803560ff81168114610f0e57600080fd5b60006020828403121561109b578081fd5b813561084881611f5c565b600080600080600080600060a0888a0312156110c0578283fd5b87356110cb81611f5c565b965060208801356110db81611f5c565b955060408801356110eb81611f5c565b9450606088013567ffffffffffffffff80821115611107578485fd5b6111138b838c01610fec565b909650945060808a013591508082111561112b578384fd5b506111388a828b01610fec565b989b979a50959850939692959293505050565b600080600080600080600080610100898b031215611167578182fd5b883561117281611f5c565b9750602089013561118281611f5c565b9650604089013561119281611f5c565b955060608901359450608089013593506111ae60a08a01611079565b925060c0890135915060e089013590509295985092959890939650565b600080600080600060a086880312156111e2578283fd5b85356111ed81611f5c565b945060208601356111fd81611f5c565b9350604086013561120d81611f5c565b925061121b60608701611065565b949793965091946080013592915050565b6000806000806000806000806000806101008b8d03121561124b578384fd5b8a3561125681611f5c565b995060208b013561126681611f5c565b985060408b013567ffffffffffffffff80821115611282578586fd5b61128e8e838f01610fec565b909a50985060608d01359150808211156112a6578586fd5b506112b38d828e01610fec565b90975095505060808b013593506112cc60a08c01611079565b925060c08b0135915060e08b013590509295989b9194979a5092959850565b600080602083850312156112fd578182fd5b823567ffffffffffffffff811115611313578283fd5b61131f85828601610fec565b90969095509350505050565b6000602080838503121561133d578182fd5b825167ffffffffffffffff811115611353578283fd5b8301601f81018513611363578283fd5b8051611371610fc582611eab565b81815283810190838501865b848110156113a6576113948a888451890101611035565b8452928601929086019060010161137d565b509098975050505050505050565b6000806000604084860312156113c8578081fd5b833567ffffffffffffffff8111156113de578182fd5b6113ea86828701610fec565b909790965060209590950135949350505050565b60006020808385031215611410578182fd5b825167ffffffffffffffff811115611426578283fd5b8301601f81018513611436578283fd5b8051611444610fc582611eab565b8181528381019083850185840285018601891015611460578687fd5b8694505b83851015611482578051835260019490940193918501918501611464565b50979650505050505050565b60006020828403121561149f578081fd5b815167ffffffffffffffff8111156114b5578182fd5b610ac384828501611035565b600080600080600080608087890312156114d9578384fd5b86356114e481611f5c565b955060208701356114f481611f5c565b9450604087013567ffffffffffffffff80821115611510578586fd5b61151c8a838b01610fec565b90965094506060890135915080821115611534578384fd5b5061154189828a01610fec565b979a9699509497509295939492505050565b60008060008060808587031215611568578182fd5b843561157381611f5c565b9350602085013561158381611f5c565b93969395505050506040820135916060013590565b600080600080600060a086880312156115af578283fd5b85356115ba81611f5c565b945060208601356115ca81611f5c565b9350604086013592506060860135600481106115e4578182fd5b91506080860135600281106115f7578182fd5b809150509295509295909350565b600080600080600060a0868803121561161c578283fd5b853561162781611f5c565b9450602086013561163781611f5c565b93506040860135925060608601359150608086013567ffffffffffffffff811115611660578182fd5b8601601f81018813611670578182fd5b803561167e610fc582611ec9565b818152896020838501011115611692578384fd5b81602084016020830137908101602001929092525093969295509093509190565b6000806000606084860312156116c7578081fd5b83356116d281611f5c565b925060208401356116e281611f5c565b929592945050506040919091013590565b600060208284031215611704578081fd5b815167ffffffffffffffff81111561171a578182fd5b8201601f8101841361172a578182fd5b610ac384825160208401610fb7565b60006020828403121561174a578081fd5b813567ffffffffffffffff811115611760578182fd5b610ac384828501611054565b6000806040838503121561177e578182fd5b823567ffffffffffffffff811115611794578283fd5b6117a085828601611054565b95602094909401359450505050565b6000602082840312156117c0578081fd5b5051919050565b60008284527f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8311156117f8578081fd5b6020830280836020870137939093016020019283525090919050565b60008284528282602086013780602084860101526020601f19601f85011685010190509392505050565b60008151808452611856816020860160208601611f30565b601f01601f19169290920160200192915050565b6000813561187781611f5c565b6001600160a01b0316835261188f6020830183611eeb565b604060208601526118a4604086018284611814565b95945050505050565b60ff169052565b6000828483379101908152919050565b600060a082016001600160a01b03808b1684526020818b1681860152818a16604086015260a0606086015282915087835260c085019150889250835b888110156119295763ffffffff61191685611065565b1683529281019291810191600101611900565b5050838103608085015261193e8186886117c7565b9b9a5050505050505050505050565b6001600160a01b039586168152938516602085015291909316604083015263ffffffff9092166060820152608081019190915260a00190565b60006001600160a01b03808a16835280891660208401525060a060408301526119b360a0830187896117c7565b82810360608401526119c68186886117c7565b905082810360808401526119da818561183e565b9a9950505050505050505050565b6001600160a01b039384168152919092166020820152604081019190915260600190565b60006001600160a01b03808816835280871660208401525084604083015283606083015260a06080830152610efe60a083018461183e565b6001600160a01b03988916815296881660208801529490961660408601526060850192909252608084015260ff1660a083015260c082019290925260e08101919091526101000190565b60006101008083016001600160a01b03808f1685526020818f16818701528360408701528293508c8352610120860193508d9250845b8d811015611aeb578335611ad781611f5c565b831685529381019392810192600101611ac4565b505050508281036060840152611b0281898b6117c7565b915050856080830152611b1860a08301866118ad565b60c082019390935260e0015298975050505050505050565b6001600160a01b0397881681529590961660208601526040850193909352606084019190915260ff16608083015260a082015260c081019190915260e00190565b60006001600160a01b03861682528460208301528360408301526080606083015261094f608083018461183e565b6000602080830181845280855180835260408601915060408482028701019250838701855b82811015611bf257603f19888603018452611be085835161183e565b94509285019290850190600101611bc4565b5092979650505050505050565b602080825281810183905260009060408084018583028501820187855b888110156113a657878303603f190184528135368b9003605e19018112611c41578788fd5b8a0160608135611c5081611f5c565b6001600160a01b03168552611c6782890183611eeb565b828a880152611c798388018284611814565b92505050611c8987830183611eeb565b925085820388870152611c9d828483611814565b96890196955050509186019150600101611c1c565b602080825281810183905260009060408482028401810190840186845b87811015611d1357868403603f190183528135368a9003603e19018112611cf4578687fd5b611d00858b830161186a565b9450509184019190840190600101611ccf565b5091979650505050505050565b6020808252825182820181905260009190848201906040850190845b81811015611d5857835183529284019291840191600101611d3c565b50909695505050505050565b600060208252610848602083018461183e565b6001600160a01b0386811682528581166020830152841660408201526060810183905260a0810160028310611da857fe5b8260808301529695505050505050565b6020808252600e908201527f696e76616c69642073656e646572000000000000000000000000000000000000604082015260600190565b60208082526012908201527f4d6f6465206e6f7420737570706f727465640000000000000000000000000000604082015260600190565b600060208252610848602083018461186a565b90815260200190565b6000808335601e19843603018112611e58578283fd5b83018035915067ffffffffffffffff821115611e72578283fd5b60200191503681900382131561102e57600080fd5b60405181810167ffffffffffffffff81118282101715611ea357fe5b604052919050565b600067ffffffffffffffff821115611ebf57fe5b5060209081020190565b600067ffffffffffffffff821115611edd57fe5b50601f01601f191660200190565b6000808335601e19843603018112611f01578283fd5b830160208101925035905067ffffffffffffffff811115611f2157600080fd5b80360383131561102e57600080fd5b60005b83811015611f4b578181015183820152602001611f33565b83811115610d285750506000910152565b6001600160a01b0381168114611f7157600080fd5b5056fe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564a264697066735822122030cee306a2c586eff23c346c6e82c0821bfa4d962836d411541ec029f782a29064736f6c63430007060033",
    "sourceMap": "794:4152:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;798:163:2;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1889:215:3;;;;;;:::i;:::-;;:::i;:::-;;3103:381:0;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;4139:310::-;;;;;;:::i;:::-;;:::i;1192:169:3:-;;;;;;:::i;:::-;;:::i;1353:402:0:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1472:233:3:-;;;;;;:::i;:::-;;:::i;1986:488:0:-;;;;;;:::i;:::-;;:::i;2132:228:2:-;;;;;;:::i;:::-;;:::i;3682:306:0:-;;;;;;:::i;:::-;;:::i;2601:342::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2245:251:3:-;;;;;;:::i;:::-;;:::i;729:293::-;;;;;;:::i;:::-;;:::i;1634:261:2:-;;;;;;:::i;:::-;;:::i;1217:187::-;;;;;;:::i;:::-;;:::i;4606:338:0:-;;;;;;:::i;:::-;;:::i;2555:308:2:-;;;;;;;;;;-1:-1:-1;2555:308:2;;;;;:::i;:::-;;:::i;798:163::-;927:27;;-1:-1:-1;;;927:27:2;;883:19;;553:42;;-1:-1:-1;;927:27:2;;952:1;;927:27;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;927:27:2;;;;;;;;;;;;:::i;:::-;918:36;798:163;-1:-1:-1;;798:163:2:o;1889:215:3:-;2084:12;;;2094:1;2084:12;;;;;;;;;-1:-1:-1;;;2034:63:3;;;-1:-1:-1;;;;;2034:22:3;;;;;:63;;2057:10;;2069:2;;2073;;2077:5;;2034:63;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1889:215;;;;:::o;3103:381:0:-;3306:21;3357:10;-1:-1:-1;;;;;3347:20:0;;;3339:47;;;;-1:-1:-1;;;3339:47:0;;;;;;;:::i;:::-;;;;;;;;;3403:74;;-1:-1:-1;;;3403:74:0;;941:42;;-1:-1:-1;;3403:74:0;;3430:10;;3442:9;;3453:5;;3460:7;;;;3469;;;;3403:74;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3403:74:0;;;;;;;;;;;;:::i;:::-;3396:81;3103:381;-1:-1:-1;;;;;;;;3103:381:0:o;4139:310::-;4370:72;;-1:-1:-1;;;4370:72:0;;941:42;;4370:23;;:72;;4394:5;;4401:7;;4410:5;;4417;;4424:8;;4434:1;;4437;;4440;;4370:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4139:310;;;;;;;;:::o;1192:169:3:-;1312:42;;-1:-1:-1;;;1312:42:3;;-1:-1:-1;;;;;1312:22:3;;;;;:42;;1335:10;;1347:2;;1351;;1312:42;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1192:169;;;:::o;1353:402:0:-;1440:22;1500:4;1488:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1478:34;;1527:9;1522:227;1542:15;;;1522:227;;;1579:12;;1624:4;1643;;1648:1;1643:7;;;;;;;;;;;;;;;;;;:::i;:::-;1616:35;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1578:73;;;;1665:40;1689:7;1698:6;1665:23;:40::i;:::-;1732:6;1719:7;1727:1;1719:10;;;;;;;;;;;;;;;;;:19;-1:-1:-1;;1559:3:0;;1522:227;;;;1353:402;;;;:::o;1472:233:3:-;1653:45;;-1:-1:-1;;;1653:45:3;;-1:-1:-1;;;;;1653:12:3;;;;;:45;;1666:7;;1675;;1684:8;;1694:3;;1653:45;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1472:233;;;;;:::o;1986:488:0:-;2173:13;2161:8;:25;;;;;;;;;2157:311;;;2202:53;-1:-1:-1;;;;;2202:22:0;;2225:10;2237:9;2248:6;2202:22;:53::i;:::-;2157:311;;;2288:13;2276:8;:25;;;;;;;;;2272:196;;;2317:81;;-1:-1:-1;;;2317:81:0;;941:42;;-1:-1:-1;;2317:81:0;;2353:5;;2360:10;;2372:9;;2383:6;;2391;;2317:81;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2272:196;;;2429:28;;-1:-1:-1;;;2429:28:0;;;;;;;:::i;2272:196::-;1986:488;;;;;:::o;2132:228:2:-;2281:41;;-1:-1:-1;;;2281:41:2;;2237:19;;553:42;;-1:-1:-1;;2313:5:2;;2281:41;;2320:1;;2281:41;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2281:41:2;;;;;;;;;;;;:::i;:::-;2272:50;2132:228;-1:-1:-1;;;2132:228:2:o;3682:306:0:-;3911:70;;-1:-1:-1;;;3911:70:0;;941:42;;3911:21;;:70;;3933:5;;3940:7;;3949:5;;3956;;3963:8;;3973:1;;3976;;3979;;3911:70;;;:::i;2601:342::-;2779:11;2820:10;-1:-1:-1;;;;;2810:20:0;;;2802:47;;;;-1:-1:-1;;;2802:47:0;;;;;;;:::i;:::-;2865:71;;-1:-1:-1;;;2865:71:0;;941:42;;-1:-1:-1;;2865:71:0;;2891:10;;2903:9;;2914:5;;2921:6;;2929;;2865:71;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2859:77;2601:342;-1:-1:-1;;;;;;2601:342:0:o;2245:251:3:-;2476:12;;;2486:1;2476:12;;;;;;;;;-1:-1:-1;;;2419:70:3;;;-1:-1:-1;;;;;2419:27:3;;;;;:70;;2447:10;;2459:2;;2463:3;;;;2468:6;;;;2419:70;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2245:251;;;;;;:::o;729:293::-;961:54;;-1:-1:-1;;;961:54:3;;-1:-1:-1;;;;;961:12:3;;;-1:-1:-1;;961:54:3;;974:5;;981:7;;990:5;;997:8;;1007:1;;1010;;1013;;961:54;;;:::i;1634:261:2:-;1804:53;;-1:-1:-1;;;1804:53:2;;1756:22;;553:42;;1804:32;;1844:5;;1804:53;;1851:5;;;;1804:53;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1804:53:2;;;;;;;;;;;;:::i;:::-;1794:63;1634:261;-1:-1:-1;;;;1634:261:2:o;1217:187::-;1361:36;;-1:-1:-1;;;1361:36:2;;1313:22;;553:42;;-1:-1:-1;;1361:36:2;;1391:5;;;;1361:36;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1361:36:2;;;;;;;;;;;;:::i;4606:338:0:-;4862:75;;-1:-1:-1;;;4862:75:0;;941:42;;-1:-1:-1;;4862:75:0;;4887:5;;4894:7;;4903:6;;;;4911;;;;4919:8;;4929:1;;4932;;4935;;4862:75;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4606:338;;;;;;;;;;:::o;2555:308:2:-;2641:19;2676:12;2779:8;;;;:1;:8;:::i;:::-;-1:-1:-1;;;;;2779:19:2;2799:6;;;;;;:::i;:::-;2779:27;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2759:47:2;-1:-1:-1;2759:47:2;-1:-1:-1;2816:40:2;2759:47;;2816:23;:40::i;:::-;2555:308;;;;:::o;456:487:8:-;541:7;536:401;;783:2;767:6;:13;:18;763:32;;;787:8;;;763:32;858:4;850:6;846:17;836:27;;908:6;897:28;;;;;;;;;;;;:::i;:::-;890:36;;-1:-1:-1;;;890:36:8;;;;;;;;:::i;536:401::-;456:487;;:::o;885:203:34:-;1012:68;;;-1:-1:-1;;;;;1012:68:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1012:68:34;;;985:96;;1005:5;;985:19;:96::i;:::-;885:203;;;;:::o;2967:751::-;3412:69;;;;;;;;;;;;;;;;;;3386:23;;3412:69;;-1:-1:-1;;;;;3412:27:34;;;3440:4;;3412:27;:69::i;:::-;3495:17;;3386:95;;-1:-1:-1;3495:21:34;3491:221;;3635:10;3624:30;;;;;;;;;;;;;;;-1:-1:-1;3624:30:34;3616:85;;;;-1:-1:-1;;;3616:85:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2967:751;;;:::o;3581:193:36:-;3684:12;3715:52;3737:6;3745:4;3751:1;3754:12;3684;4858:18;4869:6;4858:10;:18::i;:::-;4850:60;;;;;-1:-1:-1;;;4850:60:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;4981:12;4995:23;5022:6;-1:-1:-1;;;;;5022:11:36;5042:5;5050:4;5022:33;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5022:33:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4980:75;;;;5072:52;5090:7;5099:10;5111:12;5072:17;:52::i;:::-;5065:59;4608:523;-1:-1:-1;;;;;;;4608:523:36:o;726:413::-;1086:20;;1124:8;;726:413;;;;:::o;7091:725::-;7206:12;7234:7;7230:580;;;-1:-1:-1;7264:10:36;7257:17;;7230:580;7375:17;;:21;7371:429;;7633:10;7627:17;7693:15;7680:10;7676:2;7672:19;7665:44;7582:145;7765:20;;-1:-1:-1;;;7765:20:36;;;;;;;;;;;;;;;;;7772:12;;7765:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14:310:43;;120:53;135:37;165:6;135:37;:::i;:::-;120:53;:::i;:::-;111:62;;196:6;189:5;182:21;236:3;227:6;222:3;218:16;215:25;212:2;;;253:1;250;243:12;212:2;266:52;311:6;304:4;297:5;293:16;288:3;266:52;:::i;329:404::-;;;462:3;455:4;447:6;443:17;439:27;429:2;;487:8;477;470:26;429:2;-1:-1:-1;517:20:43;;560:18;549:30;;546:2;;;599:8;589;582:26;546:2;643:4;635:6;631:17;619:29;;706:3;699:4;691;683:6;679:17;671:6;667:30;663:41;660:50;657:2;;;723:1;720;713:12;657:2;419:314;;;;;:::o;738:247::-;;846:3;839:4;831:6;827:17;823:27;813:2;;868:5;861;854:20;813:2;894:85;975:3;966:6;960:13;953:4;945:6;941:17;894:85;:::i;990:167::-;;1099:2;1090:6;1085:3;1081:16;1077:25;1074:2;;;1119:5;1112;1105:20;1162:165;1231:20;;1291:10;1280:22;;1270:33;;1260:2;;1317:1;1314;1307:12;1332:158;1400:20;;1460:4;1449:16;;1439:27;;1429:2;;1480:1;1477;1470:12;1495:259;;1607:2;1595:9;1586:7;1582:23;1578:32;1575:2;;;1628:6;1620;1613:22;1575:2;1672:9;1659:23;1691:33;1718:5;1691:33;:::i;1759:1239::-;;;;;;;;2008:3;1996:9;1987:7;1983:23;1979:33;1976:2;;;2030:6;2022;2015:22;1976:2;2074:9;2061:23;2093:33;2120:5;2093:33;:::i;:::-;2145:5;-1:-1:-1;2202:2:43;2187:18;;2174:32;2215:35;2174:32;2215:35;:::i;:::-;2269:7;-1:-1:-1;2328:2:43;2313:18;;2300:32;2341:35;2300:32;2341:35;:::i;:::-;2395:7;-1:-1:-1;2453:2:43;2438:18;;2425:32;2476:18;2506:14;;;2503:2;;;2538:6;2530;2523:22;2503:2;2582:76;2650:7;2641:6;2630:9;2626:22;2582:76;:::i;:::-;2677:8;;-1:-1:-1;2556:102:43;-1:-1:-1;2765:3:43;2750:19;;2737:33;;-1:-1:-1;2782:16:43;;;2779:2;;;2816:6;2808;2801:22;2779:2;;2860:78;2930:7;2919:8;2908:9;2904:24;2860:78;:::i;:::-;1966:1032;;;;-1:-1:-1;1966:1032:43;;-1:-1:-1;1966:1032:43;;;;2834:104;;-1:-1:-1;;;1966:1032:43:o;3003:894::-;;;;;;;;;3232:3;3220:9;3211:7;3207:23;3203:33;3200:2;;;3254:6;3246;3239:22;3200:2;3298:9;3285:23;3317:33;3344:5;3317:33;:::i;:::-;3369:5;-1:-1:-1;3426:2:43;3411:18;;3398:32;3439:35;3398:32;3439:35;:::i;:::-;3493:7;-1:-1:-1;3552:2:43;3537:18;;3524:32;3565:35;3524:32;3565:35;:::i;:::-;3619:7;-1:-1:-1;3673:2:43;3658:18;;3645:32;;-1:-1:-1;3724:3:43;3709:19;;3696:33;;-1:-1:-1;3748:39:43;3782:3;3767:19;;3748:39;:::i;:::-;3738:49;;3834:3;3823:9;3819:19;3806:33;3796:43;;3886:3;3875:9;3871:19;3858:33;3848:43;;3190:707;;;;;;;;;;;:::o;3902:689::-;;;;;;4081:3;4069:9;4060:7;4056:23;4052:33;4049:2;;;4103:6;4095;4088:22;4049:2;4147:9;4134:23;4166:33;4193:5;4166:33;:::i;:::-;4218:5;-1:-1:-1;4275:2:43;4260:18;;4247:32;4288:35;4247:32;4288:35;:::i;:::-;4342:7;-1:-1:-1;4401:2:43;4386:18;;4373:32;4414:35;4373:32;4414:35;:::i;:::-;4468:7;-1:-1:-1;4494:39:43;4529:2;4514:18;;4494:39;:::i;:::-;4039:552;;;;-1:-1:-1;4039:552:43;;4580:3;4565:19;4552:33;;4039:552;-1:-1:-1;;4039:552:43:o;4596:1376::-;;;;;;;;;;;4895:3;4883:9;4874:7;4870:23;4866:33;4863:2;;;4917:6;4909;4902:22;4863:2;4961:9;4948:23;4980:33;5007:5;4980:33;:::i;:::-;5032:5;-1:-1:-1;5089:2:43;5074:18;;5061:32;5102:35;5061:32;5102:35;:::i;:::-;5156:7;-1:-1:-1;5214:2:43;5199:18;;5186:32;5237:18;5267:14;;;5264:2;;;5299:6;5291;5284:22;5264:2;5343:76;5411:7;5402:6;5391:9;5387:22;5343:76;:::i;:::-;5438:8;;-1:-1:-1;5317:102:43;-1:-1:-1;5526:2:43;5511:18;;5498:32;;-1:-1:-1;5542:16:43;;;5539:2;;;5576:6;5568;5561:22;5539:2;;5620:78;5690:7;5679:8;5668:9;5664:24;5620:78;:::i;:::-;5717:8;;-1:-1:-1;5594:104:43;-1:-1:-1;;5799:3:43;5784:19;;5771:33;;-1:-1:-1;5823:39:43;5857:3;5842:19;;5823:39;:::i;:::-;5813:49;;5909:3;5898:9;5894:19;5881:33;5871:43;;5961:3;5950:9;5946:19;5933:33;5923:43;;4853:1119;;;;;;;;;;;;;:::o;5977:474::-;;;6135:2;6123:9;6114:7;6110:23;6106:32;6103:2;;;6156:6;6148;6141:22;6103:2;6201:9;6188:23;6234:18;6226:6;6223:30;6220:2;;;6271:6;6263;6256:22;6220:2;6315:76;6383:7;6374:6;6363:9;6359:22;6315:76;:::i;:::-;6410:8;;6289:102;;-1:-1:-1;6093:358:43;-1:-1:-1;;;;6093:358:43:o;6456:927::-;;6591:2;6634;6622:9;6613:7;6609:23;6605:32;6602:2;;;6655:6;6647;6640:22;6602:2;6693:9;6687:16;6726:18;6718:6;6715:30;6712:2;;;6763:6;6755;6748:22;6712:2;6791:22;;6844:4;6836:13;;6832:27;-1:-1:-1;6822:2:43;;6878:6;6870;6863:22;6822:2;6912;6906:9;6935:63;6950:47;6994:2;6950:47;:::i;6935:63::-;7032:15;;;7063:12;;;;7095:11;;;7124:6;7139:214;7153:2;7150:1;7147:9;7139:214;;;7210:68;7270:7;7265:2;7258:3;7252:10;7248:2;7244:19;7240:28;7210:68;:::i;:::-;7198:81;;7299:12;;;;7331;;;;7171:1;7164:9;7139:214;;;-1:-1:-1;7372:5:43;;6571:812;-1:-1:-1;;;;;;;;6571:812:43:o;7388:567::-;;;;7588:2;7576:9;7567:7;7563:23;7559:32;7556:2;;;7609:6;7601;7594:22;7556:2;7654:9;7641:23;7687:18;7679:6;7676:30;7673:2;;;7724:6;7716;7709:22;7673:2;7768:76;7836:7;7827:6;7816:9;7812:22;7768:76;:::i;:::-;7863:8;;7742:102;;-1:-1:-1;7945:2:43;7930:18;;;;7917:32;;7546:409;-1:-1:-1;;;;7546:409:43:o;8456:941::-;;8582:2;8625;8613:9;8604:7;8600:23;8596:32;8593:2;;;8646:6;8638;8631:22;8593:2;8684:9;8678:16;8717:18;8709:6;8706:30;8703:2;;;8754:6;8746;8739:22;8703:2;8782:22;;8835:4;8827:13;;8823:27;-1:-1:-1;8813:2:43;;8869:6;8861;8854:22;8813:2;8903;8897:9;8926:63;8941:47;8985:2;8941:47;:::i;8926:63::-;9023:15;;;9054:12;;;;9086:11;;;9124;;;9116:20;;9112:29;;9109:42;-1:-1:-1;9106:2:43;;;9169:6;9161;9154:22;9106:2;9196:6;9187:15;;9211:156;9225:2;9222:1;9219:9;9211:156;;;9282:10;;9270:23;;9243:1;9236:9;;;;;9313:12;;;;9345;;9211:156;;;-1:-1:-1;9386:5:43;8562:835;-1:-1:-1;;;;;;;8562:835:43:o;9402:357::-;;9534:2;9522:9;9513:7;9509:23;9505:32;9502:2;;;9555:6;9547;9540:22;9502:2;9593:9;9587:16;9626:18;9618:6;9615:30;9612:2;;;9663:6;9655;9648:22;9612:2;9691:62;9745:7;9736:6;9725:9;9721:22;9691:62;:::i;9764:1114::-;;;;;;;10015:3;10003:9;9994:7;9990:23;9986:33;9983:2;;;10037:6;10029;10022:22;9983:2;10081:9;10068:23;10100:33;10127:5;10100:33;:::i;:::-;10152:5;-1:-1:-1;10209:2:43;10194:18;;10181:32;10222:35;10181:32;10222:35;:::i;:::-;10276:7;-1:-1:-1;10334:2:43;10319:18;;10306:32;10357:18;10387:14;;;10384:2;;;10419:6;10411;10404:22;10384:2;10463:76;10531:7;10522:6;10511:9;10507:22;10463:76;:::i;:::-;10558:8;;-1:-1:-1;10437:102:43;-1:-1:-1;10646:2:43;10631:18;;10618:32;;-1:-1:-1;10662:16:43;;;10659:2;;;10696:6;10688;10681:22;10659:2;;10740:78;10810:7;10799:8;10788:9;10784:24;10740:78;:::i;:::-;9973:905;;;;-1:-1:-1;9973:905:43;;-1:-1:-1;9973:905:43;;10837:8;;9973:905;-1:-1:-1;;;9973:905:43:o;10883:557::-;;;;;11064:3;11052:9;11043:7;11039:23;11035:33;11032:2;;;11086:6;11078;11071:22;11032:2;11130:9;11117:23;11149:33;11176:5;11149:33;:::i;:::-;11201:5;-1:-1:-1;11258:2:43;11243:18;;11230:32;11271:35;11230:32;11271:35;:::i;:::-;11022:418;;11325:7;;-1:-1:-1;;;;11379:2:43;11364:18;;11351:32;;11430:2;11415:18;11402:32;;11022:418::o;12366:824::-;;;;;;12578:3;12566:9;12557:7;12553:23;12549:33;12546:2;;;12600:6;12592;12585:22;12546:2;12644:9;12631:23;12663:33;12690:5;12663:33;:::i;:::-;12715:5;-1:-1:-1;12772:2:43;12757:18;;12744:32;12785:35;12744:32;12785:35;:::i;:::-;12839:7;-1:-1:-1;12893:2:43;12878:18;;12865:32;;-1:-1:-1;12949:2:43;12934:18;;12921:32;12984:1;12972:14;;12962:2;;13005:6;12997;12990:22;12962:2;13033:7;-1:-1:-1;13092:3:43;13077:19;;13064:33;13128:1;13116:14;;13106:2;;13149:6;13141;13134:22;13106:2;13177:7;13167:17;;;12536:654;;;;;;;;:::o;13195:1152::-;;;;;;13401:3;13389:9;13380:7;13376:23;13372:33;13369:2;;;13423:6;13415;13408:22;13369:2;13467:9;13454:23;13486:33;13513:5;13486:33;:::i;:::-;13538:5;-1:-1:-1;13595:2:43;13580:18;;13567:32;13608:35;13567:32;13608:35;:::i;:::-;13662:7;-1:-1:-1;13716:2:43;13701:18;;13688:32;;-1:-1:-1;13767:2:43;13752:18;;13739:32;;-1:-1:-1;13822:3:43;13807:19;;13794:33;13850:18;13839:30;;13836:2;;;13887:6;13879;13872:22;13836:2;13915:22;;13968:4;13960:13;;13956:27;-1:-1:-1;13946:2:43;;14002:6;13994;13987:22;13946:2;14043;14030:16;14068:49;14083:33;14113:2;14083:33;:::i;14068:49::-;14140:2;14133:5;14126:17;14180:7;14175:2;14170;14166;14162:11;14158:20;14155:33;14152:2;;;14206:6;14198;14191:22;14152:2;14266;14261;14257;14253:11;14248:2;14241:5;14237:14;14224:45;14289:14;;;14305:2;14285:23;14278:39;;;;-1:-1:-1;13359:988:43;;;;-1:-1:-1;13359:988:43;;-1:-1:-1;13359:988:43;14293:5;13359:988::o;14352:487::-;;;;14515:2;14503:9;14494:7;14490:23;14486:32;14483:2;;;14536:6;14528;14521:22;14483:2;14580:9;14567:23;14599:33;14626:5;14599:33;:::i;:::-;14651:5;-1:-1:-1;14708:2:43;14693:18;;14680:32;14721:35;14680:32;14721:35;:::i;:::-;14473:366;;14775:7;;-1:-1:-1;;;14829:2:43;14814:18;;;;14801:32;;14473:366::o;14844:490::-;;14977:2;14965:9;14956:7;14952:23;14948:32;14945:2;;;14998:6;14990;14983:22;14945:2;15036:9;15030:16;15069:18;15061:6;15058:30;15055:2;;;15106:6;15098;15091:22;15055:2;15134:22;;15187:4;15179:13;;15175:27;-1:-1:-1;15165:2:43;;15221:6;15213;15206:22;15165:2;15249:79;15320:7;15315:2;15309:9;15304:2;15300;15296:11;15249:79;:::i;15339:381::-;;15479:2;15467:9;15458:7;15454:23;15450:32;15447:2;;;15500:6;15492;15485:22;15447:2;15545:9;15532:23;15578:18;15570:6;15567:30;15564:2;;;15615:6;15607;15600:22;15564:2;15643:71;15706:7;15697:6;15686:9;15682:22;15643:71;:::i;15725:449::-;;;15882:2;15870:9;15861:7;15857:23;15853:32;15850:2;;;15903:6;15895;15888:22;15850:2;15948:9;15935:23;15981:18;15973:6;15970:30;15967:2;;;16018:6;16010;16003:22;15967:2;16046:71;16109:7;16100:6;16089:9;16085:22;16046:71;:::i;:::-;16036:81;16164:2;16149:18;;;;16136:32;;-1:-1:-1;;;;15840:334:43:o;16179:194::-;;16302:2;16290:9;16281:7;16277:23;16273:32;16270:2;;;16323:6;16315;16308:22;16270:2;-1:-1:-1;16351:16:43;;16260:113;-1:-1:-1;16260:113:43:o;16378:416::-;;16484:6;16479:3;16472:19;16514:66;16506:6;16503:78;16500:2;;;16596:3;16591;16584:16;16500:2;16639:4;16631:6;16627:17;16689:8;16682:5;16675:4;16670:3;16666:14;16653:45;16721:18;;;;16741:4;16717:29;16755:15;;;-1:-1:-1;16717:29:43;;16462:332;-1:-1:-1;16462:332:43:o;16799:270::-;;16889:6;16884:3;16877:19;16941:6;16934:5;16927:4;16922:3;16918:14;16905:43;16993:3;16986:4;16977:6;16972:3;16968:16;16964:27;16957:40;17058:4;17051:2;17047:7;17042:2;17034:6;17030:15;17026:29;17021:3;17017:39;17013:50;17006:57;;16867:202;;;;;:::o;17074:259::-;;17155:5;17149:12;17182:6;17177:3;17170:19;17198:63;17254:6;17247:4;17242:3;17238:14;17231:4;17224:5;17220:16;17198:63;:::i;:::-;17315:2;17294:15;-1:-1:-1;;17290:29:43;17281:39;;;;17322:4;17277:50;;17125:208;-1:-1:-1;;17125:208:43:o;17338:467::-;;17447:5;17434:19;17462:35;17489:7;17462:35;:::i;:::-;-1:-1:-1;;;;;17518:56:43;17506:69;;17618:57;17669:4;17658:16;;;17618:57;:::i;:::-;17707:4;17700;17695:3;17691:14;17684:28;17728:71;17793:4;17788:3;17784:14;17770:12;17756;17728:71;:::i;:::-;17721:78;17409:396;-1:-1:-1;;;;;17409:396:43:o;17810:77::-;17879:4;17868:16;17856:29;;17854:33::o;17892:273::-;;18075:6;18067;18062:3;18049:33;18101:16;;18126:15;;;18101:16;18039:126;-1:-1:-1;18039:126:43:o;18170:1147::-;-1:-1:-1;;;;;18640:15:43;;;18622:34;;18713:15;;;18675:2;18693:18;;;18686:43;;;;18765:15;;;18760:2;18745:18;;18738:43;18548:3;18812:2;18797:18;;18790:31;;;18533:19;;18856:22;;;18170:1147;;18936:6;;18909:3;18894:19;;;18170:1147;18973:200;18987:6;18984:1;18981:13;18973:200;;;19081:10;19052:27;19072:6;19052:27;:::i;:::-;19048:44;19036:57;;19148:15;;;;19113:12;;;;19009:1;19002:9;18973:200;;;18977:3;;19219:9;19214:3;19210:19;19204:3;19193:9;19189:19;19182:48;19247:64;19307:3;19299:6;19291;19247:64;:::i;:::-;19239:72;18509:808;-1:-1:-1;;;;;;;;;;;18509:808:43:o;19322:574::-;-1:-1:-1;;;;;19666:15:43;;;19648:34;;19718:15;;;19713:2;19698:18;;19691:43;19770:15;;;;19765:2;19750:18;;19743:43;19834:10;19822:23;;;19817:2;19802:18;;19795:51;19877:3;19862:19;;19855:35;;;;-1:-1:-1;19559:19:43;;19541:355::o;19901:925::-;-1:-1:-1;;;;;20349:15:43;;;20331:34;;20401:15;;20396:2;20381:18;;20374:43;-1:-1:-1;20448:2:43;20433:18;;20426:31;;;19901:925;;20480:80;;20540:19;;20532:6;20524;20480:80;:::i;:::-;20608:9;20600:6;20596:22;20591:2;20580:9;20576:18;20569:50;20642:67;20702:6;20694;20686;20642:67;:::i;:::-;20628:81;;20758:9;20750:6;20746:22;20740:3;20729:9;20725:19;20718:51;20786:34;20813:6;20805;20786:34;:::i;:::-;20778:42;20260:566;-1:-1:-1;;;;;;;;;;20260:566:43:o;20831:406::-;-1:-1:-1;;;;;21120:15:43;;;21102:34;;21172:15;;;;21167:2;21152:18;;21145:43;21219:2;21204:18;;21197:34;;;;21029:2;21014:18;;20996:241::o;21242:593::-;-1:-1:-1;;;;;21570:15:43;;;21552:34;;21622:15;;21617:2;21602:18;;21595:43;21669:2;21654:18;;21647:34;;;21712:2;21697:18;;21690:34;;;-1:-1:-1;21755:3:43;21740:19;;21733:32;;;21242:593;;21782:47;;21809:19;;21801:6;21782:47;:::i;21840:774::-;-1:-1:-1;;;;;22258:15:43;;;22240:34;;22310:15;;;22305:2;22290:18;;22283:43;22362:15;;;;22357:2;22342:18;;22335:43;22409:2;22394:18;;22387:34;;;;22452:3;22437:19;;22430:35;22514:4;22502:17;-1:-1:-1;22481:19:43;;22474:46;22551:3;22536:19;;22529:35;;;;22595:3;22580:19;;22573:35;;;;22166:3;22151:19;;22133:481::o;22619:1438::-;-1:-1:-1;;;;;23184:15:43;;;23166:34;;23257:15;;;23219:2;23237:18;;;23230:43;;;;23052:3;23304:2;23289:18;;23282:30;;;23078:18;;23347:22;;;22619:1438;;23400:3;23385:19;;;23427:6;;-1:-1:-1;22619:1438:43;23464:262;23478:6;23475:1;23472:13;23464:262;;;23553:6;23540:20;23573:33;23600:5;23573:33;:::i;:::-;23631:14;;23619:27;;23666:12;;;;23701:15;;;;23500:1;23493:9;23464:262;;;23468:3;;;;23771:9;23766:3;23762:19;23757:2;23746:9;23742:18;23735:47;23799:64;23859:3;23851:6;23843;23799:64;:::i;:::-;23791:72;;;23900:6;23894:3;23883:9;23879:19;23872:35;23916:47;23958:3;23947:9;23943:19;23935:6;23916:47;:::i;:::-;23994:3;23979:19;;23972:35;;;;24038:3;24023:19;24016:35;23032:1025;;-1:-1:-1;;;;;;;;23032:1025:43:o;24062:693::-;-1:-1:-1;;;;;24452:15:43;;;24434:34;;24504:15;;;;24499:2;24484:18;;24477:43;24551:2;24536:18;;24529:34;;;;24594:2;24579:18;;24572:34;;;;24655:4;24643:17;24637:3;24622:19;;24615:46;-1:-1:-1;24677:19:43;;24670:35;24736:3;24721:19;;24714:35;;;;24360:3;24345:19;;24327:428::o;24760:483::-;;-1:-1:-1;;;;;24995:6:43;24991:55;24980:9;24973:74;25083:6;25078:2;25067:9;25063:18;25056:34;25126:6;25121:2;25110:9;25106:18;25099:34;25169:3;25164:2;25153:9;25149:18;25142:31;25190:47;25232:3;25221:9;25217:19;25209:6;25190:47;:::i;25248:806::-;;25437:2;25477;25466:9;25462:18;25507:2;25496:9;25489:21;25530:6;25565;25559:13;25596:6;25588;25581:22;25634:2;25623:9;25619:18;25612:25;;25697:2;25691;25683:6;25679:15;25668:9;25664:31;25660:40;25646:54;;25735:2;25727:6;25723:15;25756:4;25769:256;25783:6;25780:1;25777:13;25769:256;;;25876:2;25872:7;25860:9;25852:6;25848:22;25844:36;25839:3;25832:49;25904:41;25938:6;25929;25923:13;25904:41;:::i;:::-;25894:51;-1:-1:-1;26003:12:43;;;;25968:15;;;;25805:1;25798:9;25769:256;;;-1:-1:-1;26042:6:43;;25417:637;-1:-1:-1;;;;;;;25417:637:43:o;26059:1710::-;26310:2;26362:21;;;26335:18;;;26418:22;;;26059:1710;;26459:2;26477:18;;;26537:15;;;26522:31;;26518:40;;26581:6;26059:1710;26618:1122;26632:6;26629:1;26626:13;26618:1122;;;-1:-1:-1;;26697:22:43;;;26693:36;26681:49;;26769:20;;-1:-1:-1;;26844:14:43;26840:27;;;26836:41;26812:66;;26802:2;;26895:4;26889;26882:18;26802:2;26928:31;;26982:4;27014:19;;27046:35;27014:19;27046:35;:::i;:::-;-1:-1:-1;;;;;27109:56:43;27094:72;;27213:55;27253:14;;;;27213:55;:::i;:::-;27305:2;27300;27292:6;27288:15;27281:27;27335:72;27403:2;27395:6;27391:15;27377:12;27363;27335:72;:::i;:::-;27321:86;;;;27458:55;27509:2;27502:5;27498:14;27491:5;27458:55;:::i;:::-;27420:93;;27562:6;27554;27550:19;27545:2;27537:6;27533:15;27526:44;27593:67;27653:6;27637:14;27621;27593:67;:::i;:::-;27718:12;;;;27583:77;-1:-1:-1;;;27683:15:43;;;;-1:-1:-1;26654:1:43;26647:9;26618:1122;;27774:1017;28009:2;28061:21;;;28034:18;;;28117:22;;;-1:-1:-1;;28170:2:43;28215:15;;;28200:31;;28196:40;;;28155:18;;28259:6;-1:-1:-1;28296:466:43;28310:6;28307:1;28304:13;28296:466;;;-1:-1:-1;;28375:22:43;;;28371:36;28359:49;;28447:20;;-1:-1:-1;;28522:14:43;28518:27;;;28514:41;28490:66;;28480:2;;28573:4;28567;28560:18;28480:2;28603:79;28675:6;28666;28646:18;28642:31;28603:79;:::i;:::-;28593:89;-1:-1:-1;;28740:12:43;;;;28705:15;;;;28332:1;28325:9;28296:466;;;-1:-1:-1;28779:6:43;;27989:802;-1:-1:-1;;;;;;;27989:802:43:o;28796:635::-;28967:2;29019:21;;;29089:13;;28992:18;;;29111:22;;;28796:635;;28967:2;29190:15;;;;29164:2;29149:18;;;28796:635;29236:169;29250:6;29247:1;29244:13;29236:169;;;29311:13;;29299:26;;29380:15;;;;29345:12;;;;29272:1;29265:9;29236:169;;;-1:-1:-1;29422:3:43;;28947:484;-1:-1:-1;;;;;;28947:484:43:o;29436:219::-;;29583:2;29572:9;29565:21;29603:46;29645:2;29634:9;29630:18;29622:6;29603:46;:::i;29660:627::-;-1:-1:-1;;;;;30027:15:43;;;30009:34;;30079:15;;;30074:2;30059:18;;30052:43;30131:15;;30126:2;30111:18;;30104:43;30178:2;30163:18;;30156:34;;;-1:-1:-1;29920:19:43;;30220:1;30209:13;;30199:2;;30226:9;30199:2;30274:6;30268:3;30257:9;30253:19;30246:35;29902:385;;;;;;;;:::o;30518:338::-;30720:2;30702:21;;;30759:2;30739:18;;;30732:30;30798:16;30793:2;30778:18;;30771:44;30847:2;30832:18;;30692:164::o;30861:342::-;31063:2;31045:21;;;31102:2;31082:18;;;31075:30;31141:20;31136:2;31121:18;;31114:48;31194:2;31179:18;;31035:168::o;31208:275::-;;31391:2;31380:9;31373:21;31411:66;31473:2;31462:9;31458:18;31450:6;31411:66;:::i;31488:177::-;31634:25;;;31622:2;31607:18;;31589:76::o;31670:533::-;;;31813:11;31800:25;31907:2;31903:7;31892:8;31876:14;31872:29;31868:43;31848:18;31844:68;31834:2;;31929:4;31923;31916:18;31834:2;31959:33;;32011:20;;;-1:-1:-1;32054:18:43;32043:30;;32040:2;;;32089:4;32083;32076:18;32040:2;32125:4;32113:17;;-1:-1:-1;32156:14:43;32152:27;;;32142:38;;32139:2;;;32193:1;32190;32183:12;32208:242;32278:2;32272:9;32308:17;;;32355:18;32340:34;;32376:22;;;32337:62;32334:2;;;32402:9;32334:2;32429;32422:22;32252:198;;-1:-1:-1;32252:198:43:o;32455:181::-;;32552:18;32544:6;32541:30;32538:2;;;32574:9;32538:2;-1:-1:-1;32625:4:43;32606:17;;;32602:28;;32528:108::o;32641:181::-;;32724:18;32716:6;32713:30;32710:2;;;32746:9;32710:2;-1:-1:-1;32805:2:43;32782:17;-1:-1:-1;;32778:31:43;32811:4;32774:42;;32700:122::o;32827:513::-;;;32954:3;32941:17;33040:2;33036:7;33025:8;33009:14;33005:29;33001:43;32981:18;32977:68;32967:2;;33063:5;33056;33049:20;32967:2;33095:33;;33199:4;33186:18;;;-1:-1:-1;33147:21:43;;-1:-1:-1;33227:18:43;33216:30;;33213:2;;;33259:1;33256;33249:12;33213:2;33309:6;33293:14;33289:27;33279:8;33275:42;33272:2;;;33330:1;33327;33320:12;33345:258;33417:1;33427:113;33441:6;33438:1;33435:13;33427:113;;;33517:11;;;33511:18;33498:11;;;33491:39;33463:2;33456:10;33427:113;;;33558:6;33555:1;33552:13;33549:2;;;-1:-1:-1;;33593:1:43;33575:16;;33568:27;33398:205::o;33608:156::-;-1:-1:-1;;;;;33685:54:43;;33675:65;;33665:2;;33754:1;33751;33744:12;33665:2;33655:109;:::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "advancedPipe((address,bytes,bytes)[],uint256)": "b452c7ae",
    "batchTransferERC1155(address,address,uint256[],uint256[])": "a9412a59",
    "etherPipe((address,bytes),uint256)": "6e47d07b",
    "farm(bytes[])": "300dd6cf",
    "multiPipe((address,bytes)[])": "cabec62b",
    "permitDeposit(address,address,address,uint256,uint256,uint8,bytes32,bytes32)": "120b5702",
    "permitDeposits(address,address,address[],uint256[],uint256,uint8,bytes32,bytes32)": "d5770dc7",
    "permitERC20(address,address,address,uint256,uint256,uint8,bytes32,bytes32)": "b442b398",
    "permitERC721(address,address,uint256,uint256,bytes)": "4935ed43",
    "permitToken(address,address,address,uint256,uint256,uint8,bytes32,bytes32)": "7c516e94",
    "pipe((address,bytes))": "08e1a0ab",
    "readPipe((address,bytes))": "dd756c4f",
    "transferDeposit(address,address,address,uint32,uint256)": "9e32d261",
    "transferDeposits(address,address,address,uint32[],uint256[])": "0d2615b1",
    "transferERC1155(address,address,uint256,uint256)": "0a7e880c",
    "transferERC721(address,address,uint256)": "1aca6376",
    "transferToken(address,address,uint256,uint8,uint8)": "6204aa43"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"clipboard\",\"type\":\"bytes\"}],\"internalType\":\"struct AdvancedPipeCall[]\",\"name\":\"pipes\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"advancedPipe\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC1155\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"batchTransferERC1155\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct PipeCall\",\"name\":\"p\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"etherPipe\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"result\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"farm\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct PipeCall[]\",\"name\":\"pipes\",\"type\":\"tuple[]\"}],\"name\":\"multiPipe\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permitDeposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permitDeposits\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20Permit\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permitERC20\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC4494\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"sig\",\"type\":\"bytes\"}],\"name\":\"permitERC721\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permitToken\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct PipeCall\",\"name\":\"p\",\"type\":\"tuple\"}],\"name\":\"pipe\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"result\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct PipeCall\",\"name\":\"p\",\"type\":\"tuple\"}],\"name\":\"readPipe\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"result\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"season\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"bdv\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint32[]\",\"name\":\"seasons\",\"type\":\"uint32[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"transferDeposits\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"bdvs\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC1155\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferERC1155\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC721\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"transferERC721\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"enum From\",\"name\":\"fromMode\",\"type\":\"uint8\"},{\"internalType\":\"enum To\",\"name\":\"toMode\",\"type\":\"uint8\"}],\"name\":\"transferToken\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Publius\",\"kind\":\"dev\",\"methods\":{\"advancedPipe((address,bytes,bytes)[],uint256)\":{\"params\":{\"pipes\":\"list of AdvancedPipeCalls to pipe through Pipeline\"},\"returns\":{\"results\":\"list of return values from each AdvancedPipeCall*\"}},\"batchTransferERC1155(address,address,uint256[],uint256[])\":{\"details\":\"Wraps {IERC1155-safeBatchTransferFrom}.*\"},\"etherPipe((address,bytes),uint256)\":{\"params\":{\"p\":\"PipeCall to pipe through Pipeline\",\"value\":\"Ether value to send in Pipecall\"},\"returns\":{\"result\":\"PipeCall return value*\"}},\"farm(bytes[])\":{\"details\":\"Implementation from https://github.com/Uniswap/v3-periphery/blob/main/contracts/base/Multicall.sol.*\",\"params\":{\"data\":\"list of encoded function calls to be executed\"},\"returns\":{\"results\":\"list of return data from each function call\"}},\"multiPipe((address,bytes)[])\":{\"params\":{\"pipes\":\"list of PipeCalls to pipe through Pipeline\"},\"returns\":{\"results\":\"list of return values from each PipeCall*\"}},\"permitDeposit(address,address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"See {SiloFacet-permitDeposit}.*\"},\"permitDeposits(address,address,address[],uint256[],uint256,uint8,bytes32,bytes32)\":{\"details\":\"See {SiloFacet-permitDeposits}.*\"},\"permitERC20(address,address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"See {IERC20Permit-permit}.\"},\"permitERC721(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC4494-permit}.*\"},\"permitToken(address,address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"See {TokenFacet-permitToken}.*\"},\"pipe((address,bytes))\":{\"params\":{\"p\":\"PipeCall to pipe through Pipeline\"},\"returns\":{\"result\":\"PipeCall return value*\"}},\"readPipe((address,bytes))\":{\"params\":{\"p\":\"PipeCall to execute with a staticcall\"},\"returns\":{\"result\":\"PipeCall return value*\"}},\"transferDeposit(address,address,address,uint32,uint256)\":{\"details\":\"See {SiloFacet-transferDeposit}.*\"},\"transferDeposits(address,address,address,uint32[],uint256[])\":{\"details\":\"See {SiloFacet-transferDeposits}.*\"},\"transferERC1155(address,address,uint256,uint256)\":{\"details\":\"Wraps {IERC1155-safeTransferFrom}.*\"},\"transferERC721(address,address,uint256)\":{\"details\":\"Wraps {IERC721-safeBatchTransferFrom}.*\"},\"transferToken(address,address,uint256,uint8,uint8)\":{\"details\":\"See {TokenFacet-transferToken}.Only supports INTERNAL and EXTERNAL From modes.*\"}},\"title\":\"Depot\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"advancedPipe((address,bytes,bytes)[],uint256)\":{\"notice\":\"Pipe multiple AdvancedPipeCalls through Pipeline.\"},\"batchTransferERC1155(address,address,uint256[],uint256[])\":{\"notice\":\"Execute an ERC-1155 token transfer of multiple Ids.\"},\"etherPipe((address,bytes),uint256)\":{\"notice\":\"Pipe a PipeCall through Pipeline with an Ether value.\"},\"farm(bytes[])\":{\"notice\":\"Execute multiple function calls in Depot.\"},\"multiPipe((address,bytes)[])\":{\"notice\":\"Pipe multiple PipeCalls through Pipeline. Does not support sending Ether in the call\"},\"permitDeposit(address,address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"Execute a permit for Beanstalk Deposits of a single Whitelisted Token.\"},\"permitDeposits(address,address,address[],uint256[],uint256,uint8,bytes32,bytes32)\":{\"notice\":\"Execute a permit for a Beanstalk Deposits of a multiple Whitelisted Tokens.\"},\"permitERC20(address,address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"permitERC20 is wrapper function for permit of ERC20Permit token\"},\"permitERC721(address,address,uint256,uint256,bytes)\":{\"notice\":\"Execute a permit for an ERC-721 token.\"},\"permitToken(address,address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"Execute a permit for an ERC-20 Token stored in a Beanstalk Farm balance.\"},\"pipe((address,bytes))\":{\"notice\":\"Pipe a PipeCall through Pipeline.\"},\"readPipe((address,bytes))\":{\"notice\":\"Return the return value of a PipeCall without executing it.\"},\"transferDeposit(address,address,address,uint32,uint256)\":{\"notice\":\"Execute a single Beanstalk Deposit transfer.\"},\"transferDeposits(address,address,address,uint32[],uint256[])\":{\"notice\":\"Execute multiple Beanstalk Deposit transfers of a single Whitelisted Tokens.\"},\"transferERC1155(address,address,uint256,uint256)\":{\"notice\":\"Execute an ERC-1155 token transfer of a single Id.\"},\"transferERC721(address,address,uint256)\":{\"notice\":\"Execute an ERC-721 token transfer\"},\"transferToken(address,address,uint256,uint8,uint8)\":{\"notice\":\"Execute a Beanstalk ERC-20 token transfer.\"}},\"notice\":\"Depot wraps Pipeline's Pipe functions to facilitate the loading of non-Ether assets in Pipeline in the same transaction that loads Ether, Pipes calls to other protocols and unloads Pipeline. https://evmpipeline.org*\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Depot.sol\":\"Depot\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":800},\"remappings\":[\":@ensdomains/=node_modules/@ensdomains/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@prb/test/=lib/prb-math/lib/prb-test/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":mocks/=contracts/mocks/\",\":oz/=lib/openzeppelin-contracts/contracts/\",\":ozu/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":prb-math/=lib/prb-math/src/\",\":prb-test/=lib/prb-math/lib/prb-test/src/\",\":src/=lib/prb-math/src/\"]},\"sources\":{\"contracts/Depot.sol\":{\"keccak256\":\"0x26e846b93da15f1d9a28b85c3fcadcbff17bf65ebcdd324c6e0b2d755c271f29\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b213e5b86f23312ce003be9d9bcb109c22b25d5cb54443bade54b08c3f156135\",\"dweb:/ipfs/QmZpLkdVZHw7jz4cUbUUYBaFQFJMpos3qiQMxrRtejUUk8\"]},\"contracts/facets/DepotFacet.sol\":{\"keccak256\":\"0x77827a0b2d410c191c8fd547b1ce454e26b4199a38063cce34f18bb3af0f6b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://05e78c9d4ba6b28ab132b9e8ed6dba6ef29aa0ee3460ea4a509d62e0e81ab8a1\",\"dweb:/ipfs/QmQmXmHbpaXBJWiwJdP1pSZhwjcCwmR7bie3fUKmpSzKGN\"]},\"contracts/facets/TokenSupportFacet.sol\":{\"keccak256\":\"0x3e012f4244e759b4509a5c0366b68f64e0df064267dadcc93d4473cd6e0302fb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bacf54960c6914af37d2d5cb3428d64a74926f4ffd5a041c10dd393914939212\",\"dweb:/ipfs/Qmd9MBG3uwfv2dKuJna2iTdZxTcsgyShtYweZbhuv2YbYq\"]},\"contracts/interfaces/IBeanstalk.sol\":{\"keccak256\":\"0x482a8bea209bc040b6a180fa7307f33fa46f4718821208c428ac505ae8d925de\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ead28f494a09a3855cf4516b292e61f926f482c78fa05b2cf26333599ffce1f\",\"dweb:/ipfs/QmUfbXo8gm84f6rYZmtDE8dVzQcUtAWoCr4WMNRz5YXXEH\"]},\"contracts/interfaces/IERC4494.sol\":{\"keccak256\":\"0x2ea3a0c4984890cd062813e027047f6a54e5a29f93d6ef294758c23100e7885d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d78c6469136c4b9de38ff0638df829a87e40e7358dc25cc79bd2cb5430db6a30\",\"dweb:/ipfs/QmfD2PY6x5u7HtfAhYYBwbZRBj7xDgfw6nk48mMRd4JPvZ\"]},\"contracts/interfaces/IPipeline.sol\":{\"keccak256\":\"0x7177b4a4dcada6f6970419e230831e13645c76e8e7d9dee21474dcb762f73d3a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d9c24ec7790fd9143327e654a339ee64ce7894c6af25b782948206026cb90c46\",\"dweb:/ipfs/QmX9LUcYWbMrpLhTnvqjFJ3WK82q3GoMVDsXHDzk1VbbYu\"]},\"contracts/libraries/LibFunction.sol\":{\"keccak256\":\"0x3efab5a39ac04cc974aeb77feefe8e300e738359f6abdbeb127d41b07334a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ae7509bec01c4abfa8329e16911057c291180c8983730fd7e5a24e0d1c9c3a60\",\"dweb:/ipfs/QmRo3mZumVthn8K1t2cc7VAVadfHKvHvQhHth7Scp9QVUx\"]},\"node_modules/@openzeppelin/contracts/drafts/IERC20Permit.sol\":{\"keccak256\":\"0x1aab7754719ba764a8a05bec47e975001400f62986474945eb3dbee6d871259f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c14e8ff1b384bdb68f262669364b1e79fbbd82b85938b7ce788a1395c40c6a2\",\"dweb:/ipfs/QmUKLXfSeEuRUXkeWLBhjHTKeSFoNBCS1RaMXv1AmHXYzn\"]},\"node_modules/@openzeppelin/contracts/introspection/IERC165.sol\":{\"keccak256\":\"0xf70bc25d981e4ec9673a995ad2995d5d493ea188d3d8f388bba9c227ce09fb82\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd970f51e3a77790c2f02b5b1759827c3b897c3d98c407b3631e8af32e3dc93c\",\"dweb:/ipfs/QmPF85Amgbqjk3SNZKsPCsqCw8JfwYEPMnnhvMJUyX58je\"]},\"node_modules/@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://526dc85e1f9b9b45830e202568d267d93dde7a4fcccf4ad7798dadcd92304d3c\",\"dweb:/ipfs/QmaoXMB972J3cSDLtBq3xBo4jLwqD2uzXTwujtSPqkYVhR\"]},\"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x61321d2c86346045bf394885ee3afeecc65f9daad2694bc19110967588fd7b5d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1703b877203e0447ede72dcf73f1c4f2089b415bd1c44877904128a64fafed5b\",\"dweb:/ipfs/QmaZoYDo2FWtKcwCc9zuabU6zri8KV9xJrhU614d93sLid\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08\",\"dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":{\"keccak256\":\"0xf12dfbe97e6276980b83d2830bb0eb75e0cf4f3e626c2471137f82158ae6a0fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a849c2d95e85463909e5b5c920b13e7a11216ca14127085e16d22b9379d52a\",\"dweb:/ipfs/QmUg3CZDbCCcQdroEpexBy5ZFd5vD1UWijWQq9qHZjtJNQ\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x2d99a0deb6648c34fbc66d6ac4a2d64798d7a5321b45624f6736fadc63da1962\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2dcdce5ede1e5e650d174ec0b35be7d47b6a50f30bc895ef0d9e59fb75052e45\",\"dweb:/ipfs/QmQ2XFsDLTYqfEdw7pYzHiGtFRY11yQm4b6ynYgKqDxeB8\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x28911e614500ae7c607a432a709d35da25f3bc5ddc8bd12b278b66358070c0ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://256c8c8af5eb072bc473226ab2b2187149b8fc04f5f4a4820db22527f5ce8e3c\",\"dweb:/ipfs/QmRvi5BhnL7Rxf85KrJhwM6RRhukm4tzoctRdgQEheNyiN\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.7.6+commit.7338295f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "struct AdvancedPipeCall[]",
              "name": "pipes",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "target",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "callData",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "clipboard",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "advancedPipe",
          "outputs": [
            {
              "internalType": "bytes[]",
              "name": "results",
              "type": "bytes[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC1155",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "values",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "batchTransferERC1155"
        },
        {
          "inputs": [
            {
              "internalType": "struct PipeCall",
              "name": "p",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "target",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "etherPipe",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "result",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes[]",
              "name": "data",
              "type": "bytes[]"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "farm",
          "outputs": [
            {
              "internalType": "bytes[]",
              "name": "results",
              "type": "bytes[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct PipeCall[]",
              "name": "pipes",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "target",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "multiPipe",
          "outputs": [
            {
              "internalType": "bytes[]",
              "name": "results",
              "type": "bytes[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "permitDeposit"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "address[]",
              "name": "tokens",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "values",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "permitDeposits"
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20Permit",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "permitERC20"
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC4494",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "sig",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "permitERC721"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "permitToken"
        },
        {
          "inputs": [
            {
              "internalType": "struct PipeCall",
              "name": "p",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "target",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "pipe",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "result",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct PipeCall",
              "name": "p",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "target",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "readPipe",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "result",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint32",
              "name": "season",
              "type": "uint32"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "transferDeposit",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "bdv",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint32[]",
              "name": "seasons",
              "type": "uint32[]"
            },
            {
              "internalType": "uint256[]",
              "name": "amounts",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "transferDeposits",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "bdvs",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC1155",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "transferERC1155"
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC721",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "transferERC721"
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "enum From",
              "name": "fromMode",
              "type": "uint8"
            },
            {
              "internalType": "enum To",
              "name": "toMode",
              "type": "uint8"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "transferToken"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "advancedPipe((address,bytes,bytes)[],uint256)": {
            "params": {
              "pipes": "list of AdvancedPipeCalls to pipe through Pipeline"
            },
            "returns": {
              "results": "list of return values from each AdvancedPipeCall*"
            }
          },
          "batchTransferERC1155(address,address,uint256[],uint256[])": {
            "details": "Wraps {IERC1155-safeBatchTransferFrom}.*"
          },
          "etherPipe((address,bytes),uint256)": {
            "params": {
              "p": "PipeCall to pipe through Pipeline",
              "value": "Ether value to send in Pipecall"
            },
            "returns": {
              "result": "PipeCall return value*"
            }
          },
          "farm(bytes[])": {
            "details": "Implementation from https://github.com/Uniswap/v3-periphery/blob/main/contracts/base/Multicall.sol.*",
            "params": {
              "data": "list of encoded function calls to be executed"
            },
            "returns": {
              "results": "list of return data from each function call"
            }
          },
          "multiPipe((address,bytes)[])": {
            "params": {
              "pipes": "list of PipeCalls to pipe through Pipeline"
            },
            "returns": {
              "results": "list of return values from each PipeCall*"
            }
          },
          "permitDeposit(address,address,address,uint256,uint256,uint8,bytes32,bytes32)": {
            "details": "See {SiloFacet-permitDeposit}.*"
          },
          "permitDeposits(address,address,address[],uint256[],uint256,uint8,bytes32,bytes32)": {
            "details": "See {SiloFacet-permitDeposits}.*"
          },
          "permitERC20(address,address,address,uint256,uint256,uint8,bytes32,bytes32)": {
            "details": "See {IERC20Permit-permit}."
          },
          "permitERC721(address,address,uint256,uint256,bytes)": {
            "details": "See {IERC4494-permit}.*"
          },
          "permitToken(address,address,address,uint256,uint256,uint8,bytes32,bytes32)": {
            "details": "See {TokenFacet-permitToken}.*"
          },
          "pipe((address,bytes))": {
            "params": {
              "p": "PipeCall to pipe through Pipeline"
            },
            "returns": {
              "result": "PipeCall return value*"
            }
          },
          "readPipe((address,bytes))": {
            "params": {
              "p": "PipeCall to execute with a staticcall"
            },
            "returns": {
              "result": "PipeCall return value*"
            }
          },
          "transferDeposit(address,address,address,uint32,uint256)": {
            "details": "See {SiloFacet-transferDeposit}.*"
          },
          "transferDeposits(address,address,address,uint32[],uint256[])": {
            "details": "See {SiloFacet-transferDeposits}.*"
          },
          "transferERC1155(address,address,uint256,uint256)": {
            "details": "Wraps {IERC1155-safeTransferFrom}.*"
          },
          "transferERC721(address,address,uint256)": {
            "details": "Wraps {IERC721-safeBatchTransferFrom}.*"
          },
          "transferToken(address,address,uint256,uint8,uint8)": {
            "details": "See {TokenFacet-transferToken}.Only supports INTERNAL and EXTERNAL From modes.*"
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "advancedPipe((address,bytes,bytes)[],uint256)": {
            "notice": "Pipe multiple AdvancedPipeCalls through Pipeline."
          },
          "batchTransferERC1155(address,address,uint256[],uint256[])": {
            "notice": "Execute an ERC-1155 token transfer of multiple Ids."
          },
          "etherPipe((address,bytes),uint256)": {
            "notice": "Pipe a PipeCall through Pipeline with an Ether value."
          },
          "farm(bytes[])": {
            "notice": "Execute multiple function calls in Depot."
          },
          "multiPipe((address,bytes)[])": {
            "notice": "Pipe multiple PipeCalls through Pipeline. Does not support sending Ether in the call"
          },
          "permitDeposit(address,address,address,uint256,uint256,uint8,bytes32,bytes32)": {
            "notice": "Execute a permit for Beanstalk Deposits of a single Whitelisted Token."
          },
          "permitDeposits(address,address,address[],uint256[],uint256,uint8,bytes32,bytes32)": {
            "notice": "Execute a permit for a Beanstalk Deposits of a multiple Whitelisted Tokens."
          },
          "permitERC20(address,address,address,uint256,uint256,uint8,bytes32,bytes32)": {
            "notice": "permitERC20 is wrapper function for permit of ERC20Permit token"
          },
          "permitERC721(address,address,uint256,uint256,bytes)": {
            "notice": "Execute a permit for an ERC-721 token."
          },
          "permitToken(address,address,address,uint256,uint256,uint8,bytes32,bytes32)": {
            "notice": "Execute a permit for an ERC-20 Token stored in a Beanstalk Farm balance."
          },
          "pipe((address,bytes))": {
            "notice": "Pipe a PipeCall through Pipeline."
          },
          "readPipe((address,bytes))": {
            "notice": "Return the return value of a PipeCall without executing it."
          },
          "transferDeposit(address,address,address,uint32,uint256)": {
            "notice": "Execute a single Beanstalk Deposit transfer."
          },
          "transferDeposits(address,address,address,uint32[],uint256[])": {
            "notice": "Execute multiple Beanstalk Deposit transfers of a single Whitelisted Tokens."
          },
          "transferERC1155(address,address,uint256,uint256)": {
            "notice": "Execute an ERC-1155 token transfer of a single Id."
          },
          "transferERC721(address,address,uint256)": {
            "notice": "Execute an ERC-721 token transfer"
          },
          "transferToken(address,address,uint256,uint8,uint8)": {
            "notice": "Execute a Beanstalk ERC-20 token transfer."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@ensdomains/=node_modules/@ensdomains/",
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":@prb/test/=lib/prb-math/lib/prb-test/src/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":eth-gas-reporter/=node_modules/eth-gas-reporter/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat/=node_modules/hardhat/",
        ":mocks/=contracts/mocks/",
        ":oz/=lib/openzeppelin-contracts/contracts/",
        ":ozu/=lib/openzeppelin-contracts-upgradeable/contracts/",
        ":prb-math/=lib/prb-math/src/",
        ":prb-test/=lib/prb-math/lib/prb-test/src/",
        ":src/=lib/prb-math/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 800
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/Depot.sol": "Depot"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/Depot.sol": {
        "keccak256": "0x26e846b93da15f1d9a28b85c3fcadcbff17bf65ebcdd324c6e0b2d755c271f29",
        "urls": [
          "bzz-raw://b213e5b86f23312ce003be9d9bcb109c22b25d5cb54443bade54b08c3f156135",
          "dweb:/ipfs/QmZpLkdVZHw7jz4cUbUUYBaFQFJMpos3qiQMxrRtejUUk8"
        ],
        "license": "MIT"
      },
      "contracts/facets/DepotFacet.sol": {
        "keccak256": "0x77827a0b2d410c191c8fd547b1ce454e26b4199a38063cce34f18bb3af0f6b4e",
        "urls": [
          "bzz-raw://05e78c9d4ba6b28ab132b9e8ed6dba6ef29aa0ee3460ea4a509d62e0e81ab8a1",
          "dweb:/ipfs/QmQmXmHbpaXBJWiwJdP1pSZhwjcCwmR7bie3fUKmpSzKGN"
        ],
        "license": "MIT"
      },
      "contracts/facets/TokenSupportFacet.sol": {
        "keccak256": "0x3e012f4244e759b4509a5c0366b68f64e0df064267dadcc93d4473cd6e0302fb",
        "urls": [
          "bzz-raw://bacf54960c6914af37d2d5cb3428d64a74926f4ffd5a041c10dd393914939212",
          "dweb:/ipfs/Qmd9MBG3uwfv2dKuJna2iTdZxTcsgyShtYweZbhuv2YbYq"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IBeanstalk.sol": {
        "keccak256": "0x482a8bea209bc040b6a180fa7307f33fa46f4718821208c428ac505ae8d925de",
        "urls": [
          "bzz-raw://7ead28f494a09a3855cf4516b292e61f926f482c78fa05b2cf26333599ffce1f",
          "dweb:/ipfs/QmUfbXo8gm84f6rYZmtDE8dVzQcUtAWoCr4WMNRz5YXXEH"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IERC4494.sol": {
        "keccak256": "0x2ea3a0c4984890cd062813e027047f6a54e5a29f93d6ef294758c23100e7885d",
        "urls": [
          "bzz-raw://d78c6469136c4b9de38ff0638df829a87e40e7358dc25cc79bd2cb5430db6a30",
          "dweb:/ipfs/QmfD2PY6x5u7HtfAhYYBwbZRBj7xDgfw6nk48mMRd4JPvZ"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IPipeline.sol": {
        "keccak256": "0x7177b4a4dcada6f6970419e230831e13645c76e8e7d9dee21474dcb762f73d3a",
        "urls": [
          "bzz-raw://d9c24ec7790fd9143327e654a339ee64ce7894c6af25b782948206026cb90c46",
          "dweb:/ipfs/QmX9LUcYWbMrpLhTnvqjFJ3WK82q3GoMVDsXHDzk1VbbYu"
        ],
        "license": "MIT"
      },
      "contracts/libraries/LibFunction.sol": {
        "keccak256": "0x3efab5a39ac04cc974aeb77feefe8e300e738359f6abdbeb127d41b07334a5d6",
        "urls": [
          "bzz-raw://ae7509bec01c4abfa8329e16911057c291180c8983730fd7e5a24e0d1c9c3a60",
          "dweb:/ipfs/QmRo3mZumVthn8K1t2cc7VAVadfHKvHvQhHth7Scp9QVUx"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/drafts/IERC20Permit.sol": {
        "keccak256": "0x1aab7754719ba764a8a05bec47e975001400f62986474945eb3dbee6d871259f",
        "urls": [
          "bzz-raw://8c14e8ff1b384bdb68f262669364b1e79fbbd82b85938b7ce788a1395c40c6a2",
          "dweb:/ipfs/QmUKLXfSeEuRUXkeWLBhjHTKeSFoNBCS1RaMXv1AmHXYzn"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/introspection/IERC165.sol": {
        "keccak256": "0xf70bc25d981e4ec9673a995ad2995d5d493ea188d3d8f388bba9c227ce09fb82",
        "urls": [
          "bzz-raw://bd970f51e3a77790c2f02b5b1759827c3b897c3d98c407b3631e8af32e3dc93c",
          "dweb:/ipfs/QmPF85Amgbqjk3SNZKsPCsqCw8JfwYEPMnnhvMJUyX58je"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/math/SafeMath.sol": {
        "keccak256": "0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52",
        "urls": [
          "bzz-raw://526dc85e1f9b9b45830e202568d267d93dde7a4fcccf4ad7798dadcd92304d3c",
          "dweb:/ipfs/QmaoXMB972J3cSDLtBq3xBo4jLwqD2uzXTwujtSPqkYVhR"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
        "keccak256": "0x61321d2c86346045bf394885ee3afeecc65f9daad2694bc19110967588fd7b5d",
        "urls": [
          "bzz-raw://1703b877203e0447ede72dcf73f1c4f2089b415bd1c44877904128a64fafed5b",
          "dweb:/ipfs/QmaZoYDo2FWtKcwCc9zuabU6zri8KV9xJrhU614d93sLid"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5",
        "urls": [
          "bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08",
          "dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/SafeERC20.sol": {
        "keccak256": "0xf12dfbe97e6276980b83d2830bb0eb75e0cf4f3e626c2471137f82158ae6a0fc",
        "urls": [
          "bzz-raw://b3a849c2d95e85463909e5b5c920b13e7a11216ca14127085e16d22b9379d52a",
          "dweb:/ipfs/QmUg3CZDbCCcQdroEpexBy5ZFd5vD1UWijWQq9qHZjtJNQ"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol": {
        "keccak256": "0x2d99a0deb6648c34fbc66d6ac4a2d64798d7a5321b45624f6736fadc63da1962",
        "urls": [
          "bzz-raw://2dcdce5ede1e5e650d174ec0b35be7d47b6a50f30bc895ef0d9e59fb75052e45",
          "dweb:/ipfs/QmQ2XFsDLTYqfEdw7pYzHiGtFRY11yQm4b6ynYgKqDxeB8"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Address.sol": {
        "keccak256": "0x28911e614500ae7c607a432a709d35da25f3bc5ddc8bd12b278b66358070c0ea",
        "urls": [
          "bzz-raw://256c8c8af5eb072bc473226ab2b2187149b8fc04f5f4a4820db22527f5ce8e3c",
          "dweb:/ipfs/QmRvi5BhnL7Rxf85KrJhwM6RRhukm4tzoctRdgQEheNyiN"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/Depot.sol",
    "id": 319,
    "exportedSymbols": {
      "Address": [
        30603
      ],
      "AdvancedPipeCall": [
        2683
      ],
      "Depot": [
        318
      ],
      "DepotFacet": [
        1936
      ],
      "From": [
        2088
      ],
      "IBeanstalk": [
        2197
      ],
      "IERC1155": [
        29338
      ],
      "IERC165": [
        28861
      ],
      "IERC20": [
        29978
      ],
      "IERC20Permit": [
        28849
      ],
      "IERC4494": [
        2668
      ],
      "IERC721": [
        30307
      ],
      "IPipeline": [
        2709
      ],
      "LibFunction": [
        2915
      ],
      "PipeCall": [
        2676
      ],
      "SafeERC20": [
        30191
      ],
      "SafeMath": [
        29216
      ],
      "To": [
        2091
      ],
      "TokenSupportFacet": [
        2078
      ]
    },
    "nodeType": "SourceUnit",
    "src": "33:4914:0",
    "nodes": [
      {
        "id": 1,
        "nodeType": "PragmaDirective",
        "src": "33:23:0",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.7",
          ".6"
        ]
      },
      {
        "id": 2,
        "nodeType": "PragmaDirective",
        "src": "57:33:0",
        "nodes": [],
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ]
      },
      {
        "id": 3,
        "nodeType": "ImportDirective",
        "src": "92:57:0",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/drafts/IERC20Permit.sol",
        "file": "@openzeppelin/contracts/drafts/IERC20Permit.sol",
        "scope": 319,
        "sourceUnit": 28850,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 4,
        "nodeType": "ImportDirective",
        "src": "150:60:0",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
        "file": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
        "scope": 319,
        "sourceUnit": 29339,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 5,
        "nodeType": "ImportDirective",
        "src": "211:58:0",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol",
        "file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
        "scope": 319,
        "sourceUnit": 30308,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 6,
        "nodeType": "ImportDirective",
        "src": "270:59:0",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/SafeERC20.sol",
        "scope": 319,
        "sourceUnit": 30192,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 7,
        "nodeType": "ImportDirective",
        "src": "330:33:0",
        "nodes": [],
        "absolutePath": "contracts/facets/DepotFacet.sol",
        "file": "./facets/DepotFacet.sol",
        "scope": 319,
        "sourceUnit": 1937,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 8,
        "nodeType": "ImportDirective",
        "src": "364:40:0",
        "nodes": [],
        "absolutePath": "contracts/facets/TokenSupportFacet.sol",
        "file": "./facets/TokenSupportFacet.sol",
        "scope": 319,
        "sourceUnit": 2079,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 9,
        "nodeType": "ImportDirective",
        "src": "405:37:0",
        "nodes": [],
        "absolutePath": "contracts/interfaces/IBeanstalk.sol",
        "file": "./interfaces/IBeanstalk.sol",
        "scope": 319,
        "sourceUnit": 2198,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 10,
        "nodeType": "ImportDirective",
        "src": "443:35:0",
        "nodes": [],
        "absolutePath": "contracts/interfaces/IERC4494.sol",
        "file": "./interfaces/IERC4494.sol",
        "scope": 319,
        "sourceUnit": 2669,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 11,
        "nodeType": "ImportDirective",
        "src": "479:37:0",
        "nodes": [],
        "absolutePath": "contracts/libraries/LibFunction.sol",
        "file": "./libraries/LibFunction.sol",
        "scope": 319,
        "sourceUnit": 2916,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 318,
        "nodeType": "ContractDefinition",
        "src": "794:4152:0",
        "nodes": [
          {
            "id": 19,
            "nodeType": "UsingForDirective",
            "src": "849:27:0",
            "nodes": [],
            "libraryName": {
              "id": 17,
              "name": "SafeERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 30191,
              "src": "855:9:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeERC20_$30191",
                "typeString": "library SafeERC20"
              }
            },
            "typeName": {
              "id": 18,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 29978,
              "src": "869:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$29978",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "id": 24,
            "nodeType": "VariableDeclaration",
            "src": "882:102:0",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "beanstalk",
            "scope": 318,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IBeanstalk_$2197",
              "typeString": "contract IBeanstalk"
            },
            "typeName": {
              "id": 20,
              "name": "IBeanstalk",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2197,
              "src": "882:10:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IBeanstalk_$2197",
                "typeString": "contract IBeanstalk"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307843314530383866433133323362323042434265653962643142396643393534366462353632344335",
                  "id": 22,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "941:42:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "value": "0xC1E088fC1323b20BCBee9bd1B9fC9546db5624C5"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                ],
                "id": 21,
                "name": "IBeanstalk",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 2197,
                "src": "930:10:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_IBeanstalk_$2197_$",
                  "typeString": "type(contract IBeanstalk)"
                }
              },
              "id": 23,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "930:54:0",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IBeanstalk_$2197",
                "typeString": "contract IBeanstalk"
              }
            },
            "visibility": "private"
          },
          {
            "id": 84,
            "nodeType": "FunctionDefinition",
            "src": "1353:402:0",
            "nodes": [],
            "body": {
              "id": 83,
              "nodeType": "Block",
              "src": "1468:287:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 41,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 34,
                      "name": "results",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32,
                      "src": "1478:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                        "typeString": "bytes memory[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 38,
                            "name": "data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28,
                            "src": "1500:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
                              "typeString": "bytes calldata[] calldata"
                            }
                          },
                          "id": 39,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "1500:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 37,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1488:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (bytes memory[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 35,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "1492:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes"
                            }
                          },
                          "id": 36,
                          "nodeType": "ArrayTypeName",
                          "src": "1492:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                            "typeString": "bytes[]"
                          }
                        }
                      },
                      "id": 40,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1488:24:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                        "typeString": "bytes memory[] memory"
                      }
                    },
                    "src": "1478:34:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                      "typeString": "bytes memory[] memory"
                    }
                  },
                  "id": 42,
                  "nodeType": "ExpressionStatement",
                  "src": "1478:34:0"
                },
                {
                  "body": {
                    "id": 81,
                    "nodeType": "Block",
                    "src": "1564:185:0",
                    "statements": [
                      {
                        "assignments": [
                          55,
                          57
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 55,
                            "mutability": "mutable",
                            "name": "success",
                            "nodeType": "VariableDeclaration",
                            "scope": 81,
                            "src": "1579:12:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 54,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "1579:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 57,
                            "mutability": "mutable",
                            "name": "result",
                            "nodeType": "VariableDeclaration",
                            "scope": 81,
                            "src": "1593:19:0",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 56,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "1593:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 67,
                        "initialValue": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 63,
                                "name": "data",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 28,
                                "src": "1643:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
                                  "typeString": "bytes calldata[] calldata"
                                }
                              },
                              "id": 65,
                              "indexExpression": {
                                "id": 64,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 44,
                                "src": "1648:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1643:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 60,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "1624:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Depot_$318",
                                    "typeString": "contract Depot"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Depot_$318",
                                    "typeString": "contract Depot"
                                  }
                                ],
                                "id": 59,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1616:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 58,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1616:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 61,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1616:13:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 62,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "delegatecall",
                            "nodeType": "MemberAccess",
                            "src": "1616:26:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                              "typeString": "function (bytes memory) returns (bool,bytes memory)"
                            }
                          },
                          "id": 66,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1616:35:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1578:73:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 71,
                              "name": "success",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 55,
                              "src": "1689:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "id": 72,
                              "name": "result",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 57,
                              "src": "1698:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "id": 68,
                              "name": "LibFunction",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2915,
                              "src": "1665:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_LibFunction_$2915_$",
                                "typeString": "type(library LibFunction)"
                              }
                            },
                            "id": 70,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "checkReturn",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2745,
                            "src": "1665:23:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (bool,bytes memory) pure"
                            }
                          },
                          "id": 73,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1665:40:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 74,
                        "nodeType": "ExpressionStatement",
                        "src": "1665:40:0"
                      },
                      {
                        "expression": {
                          "id": 79,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 75,
                              "name": "results",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32,
                              "src": "1719:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                                "typeString": "bytes memory[] memory"
                              }
                            },
                            "id": 77,
                            "indexExpression": {
                              "id": 76,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 44,
                              "src": "1727:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1719:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 78,
                            "name": "result",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 57,
                            "src": "1732:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "src": "1719:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "id": 80,
                        "nodeType": "ExpressionStatement",
                        "src": "1719:19:0"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 50,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 47,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44,
                      "src": "1542:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 48,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28,
                        "src": "1546:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "bytes calldata[] calldata"
                        }
                      },
                      "id": 49,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "1546:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1542:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 82,
                  "initializationExpression": {
                    "assignments": [
                      44
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 44,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 82,
                        "src": "1527:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 43,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1527:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 46,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 45,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1539:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1527:13:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 52,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1559:3:0",
                      "subExpression": {
                        "id": 51,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44,
                        "src": "1559:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 53,
                    "nodeType": "ExpressionStatement",
                    "src": "1559:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "1522:227:0"
                }
              ]
            },
            "documentation": {
              "id": 25,
              "nodeType": "StructuredDocumentation",
              "src": "1036:312:0",
              "text": " @notice Execute multiple function calls in Depot.\n @param data list of encoded function calls to be executed\n @return results list of return data from each function call\n @dev Implementation from https://github.com/Uniswap/v3-periphery/blob/main/contracts/base/Multicall.sol.*"
            },
            "functionSelector": "300dd6cf",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "farm",
            "parameters": {
              "id": 29,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28,
                  "mutability": "mutable",
                  "name": "data",
                  "nodeType": "VariableDeclaration",
                  "scope": 84,
                  "src": "1367:21:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "bytes[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 26,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "1367:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "id": 27,
                    "nodeType": "ArrayTypeName",
                    "src": "1367:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                      "typeString": "bytes[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1366:23:0"
            },
            "returnParameters": {
              "id": 33,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32,
                  "mutability": "mutable",
                  "name": "results",
                  "nodeType": "VariableDeclaration",
                  "scope": 84,
                  "src": "1440:22:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                    "typeString": "bytes[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 30,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "1440:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "id": 31,
                    "nodeType": "ArrayTypeName",
                    "src": "1440:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                      "typeString": "bytes[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1439:24:0"
            },
            "scope": 318,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 136,
            "nodeType": "FunctionDefinition",
            "src": "1986:488:0",
            "nodes": [],
            "body": {
              "id": 135,
              "nodeType": "Block",
              "src": "2147:327:0",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_From_$2088",
                      "typeString": "enum From"
                    },
                    "id": 101,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 98,
                      "name": "fromMode",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 93,
                      "src": "2161:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_From_$2088",
                        "typeString": "enum From"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 99,
                        "name": "From",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2088,
                        "src": "2173:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_From_$2088_$",
                          "typeString": "type(enum From)"
                        }
                      },
                      "id": 100,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "EXTERNAL",
                      "nodeType": "MemberAccess",
                      "src": "2173:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_From_$2088",
                        "typeString": "enum From"
                      }
                    },
                    "src": "2161:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_enum$_From_$2088",
                        "typeString": "enum From"
                      },
                      "id": 115,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 112,
                        "name": "fromMode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 93,
                        "src": "2276:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_From_$2088",
                          "typeString": "enum From"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "id": 113,
                          "name": "From",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2088,
                          "src": "2288:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_From_$2088_$",
                            "typeString": "type(enum From)"
                          }
                        },
                        "id": 114,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "INTERNAL",
                        "nodeType": "MemberAccess",
                        "src": "2288:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_From_$2088",
                          "typeString": "enum From"
                        }
                      },
                      "src": "2276:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "id": 132,
                      "nodeType": "Block",
                      "src": "2415:53:0",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "hexValue": "4d6f6465206e6f7420737570706f72746564",
                                "id": 129,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2436:20:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_5fcdc4de02dd6e1a18ca6b885ac29f31d74a6a9ce00cfd4b1ad97327e875ada4",
                                  "typeString": "literal_string \"Mode not supported\""
                                },
                                "value": "Mode not supported"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_5fcdc4de02dd6e1a18ca6b885ac29f31d74a6a9ce00cfd4b1ad97327e875ada4",
                                  "typeString": "literal_string \"Mode not supported\""
                                }
                              ],
                              "id": 128,
                              "name": "revert",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                -19,
                                -19
                              ],
                              "referencedDeclaration": -19,
                              "src": "2429:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                "typeString": "function (string memory) pure"
                              }
                            },
                            "id": 130,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2429:28:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 131,
                          "nodeType": "ExpressionStatement",
                          "src": "2429:28:0"
                        }
                      ]
                    },
                    "id": 133,
                    "nodeType": "IfStatement",
                    "src": "2272:196:0",
                    "trueBody": {
                      "id": 127,
                      "nodeType": "Block",
                      "src": "2303:106:0",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 119,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 87,
                                "src": "2353:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$29978",
                                  "typeString": "contract IERC20"
                                }
                              },
                              {
                                "expression": {
                                  "id": 120,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "2360:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 121,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "2360:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              {
                                "id": 122,
                                "name": "recipient",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 89,
                                "src": "2372:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 123,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 91,
                                "src": "2383:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 124,
                                "name": "toMode",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 95,
                                "src": "2391:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_To_$2091",
                                  "typeString": "enum To"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IERC20_$29978",
                                  "typeString": "contract IERC20"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_enum$_To_$2091",
                                  "typeString": "enum To"
                                }
                              ],
                              "expression": {
                                "id": 116,
                                "name": "beanstalk",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24,
                                "src": "2317:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IBeanstalk_$2197",
                                  "typeString": "contract IBeanstalk"
                                }
                              },
                              "id": 118,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "transferInternalTokenFrom",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2104,
                              "src": "2317:35:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$_t_contract$_IERC20_$29978_$_t_address_$_t_address_$_t_uint256_$_t_enum$_To_$2091_$returns$__$",
                                "typeString": "function (contract IERC20,address,address,uint256,enum To) payable external"
                              }
                            },
                            "id": 125,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2317:81:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 126,
                          "nodeType": "ExpressionStatement",
                          "src": "2317:81:0"
                        }
                      ]
                    }
                  },
                  "id": 134,
                  "nodeType": "IfStatement",
                  "src": "2157:311:0",
                  "trueBody": {
                    "id": 111,
                    "nodeType": "Block",
                    "src": "2188:78:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 105,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "2225:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 106,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2225:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "id": 107,
                              "name": "recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 89,
                              "src": "2237:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 108,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 91,
                              "src": "2248:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 102,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 87,
                              "src": "2202:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$29978",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 104,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 30037,
                            "src": "2202:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$29978_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$29978_$",
                              "typeString": "function (contract IERC20,address,address,uint256)"
                            }
                          },
                          "id": 109,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2202:53:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 110,
                        "nodeType": "ExpressionStatement",
                        "src": "2202:53:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 85,
              "nodeType": "StructuredDocumentation",
              "src": "1808:173:0",
              "text": " @notice Execute a Beanstalk ERC-20 token transfer.\n @dev See {TokenFacet-transferToken}.\n @dev Only supports INTERNAL and EXTERNAL From modes.*"
            },
            "functionSelector": "6204aa43",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferToken",
            "parameters": {
              "id": 96,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87,
                  "mutability": "mutable",
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 136,
                  "src": "2018:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$29978",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 86,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 29978,
                    "src": "2018:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$29978",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 89,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 136,
                  "src": "2040:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 88,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2040:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 91,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 136,
                  "src": "2067:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 90,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2067:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 93,
                  "mutability": "mutable",
                  "name": "fromMode",
                  "nodeType": "VariableDeclaration",
                  "scope": 136,
                  "src": "2091:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_From_$2088",
                    "typeString": "enum From"
                  },
                  "typeName": {
                    "id": 92,
                    "name": "From",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 2088,
                    "src": "2091:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_From_$2088",
                      "typeString": "enum From"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 95,
                  "mutability": "mutable",
                  "name": "toMode",
                  "nodeType": "VariableDeclaration",
                  "scope": 136,
                  "src": "2114:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_To_$2091",
                    "typeString": "enum To"
                  },
                  "typeName": {
                    "id": 94,
                    "name": "To",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 2091,
                    "src": "2114:2:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_To_$2091",
                      "typeString": "enum To"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2008:121:0"
            },
            "returnParameters": {
              "id": 97,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2147:0:0"
            },
            "scope": 318,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 173,
            "nodeType": "FunctionDefinition",
            "src": "2601:342:0",
            "nodes": [],
            "body": {
              "id": 172,
              "nodeType": "Block",
              "src": "2792:151:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 156,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 153,
                          "name": "sender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 139,
                          "src": "2810:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 154,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2820:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 155,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2820:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "2810:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "696e76616c69642073656e646572",
                        "id": 157,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2832:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_175ad23f068aed3ab88ee19620d541e9ae3d91161407ed4bb90c97cce31b0783",
                          "typeString": "literal_string \"invalid sender\""
                        },
                        "value": "invalid sender"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_175ad23f068aed3ab88ee19620d541e9ae3d91161407ed4bb90c97cce31b0783",
                          "typeString": "literal_string \"invalid sender\""
                        }
                      ],
                      "id": 152,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2802:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 158,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2802:47:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 159,
                  "nodeType": "ExpressionStatement",
                  "src": "2802:47:0"
                },
                {
                  "expression": {
                    "id": 170,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 160,
                      "name": "bdv",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 150,
                      "src": "2859:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 163,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2891:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 164,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2891:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "id": 165,
                          "name": "recipient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 141,
                          "src": "2903:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 166,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 143,
                          "src": "2914:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 167,
                          "name": "season",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 145,
                          "src": "2921:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        {
                          "id": 168,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 147,
                          "src": "2929:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 161,
                          "name": "beanstalk",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24,
                          "src": "2865:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IBeanstalk_$2197",
                            "typeString": "contract IBeanstalk"
                          }
                        },
                        "id": 162,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "transferDeposit",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2138,
                        "src": "2865:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_address_$_t_address_$_t_address_$_t_uint32_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (address,address,address,uint32,uint256) payable external returns (uint256)"
                        }
                      },
                      "id": 169,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2865:71:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2859:77:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 171,
                  "nodeType": "ExpressionStatement",
                  "src": "2859:77:0"
                }
              ]
            },
            "documentation": {
              "id": 137,
              "nodeType": "StructuredDocumentation",
              "src": "2480:116:0",
              "text": " @notice Execute a single Beanstalk Deposit transfer.\n @dev See {SiloFacet-transferDeposit}.*"
            },
            "functionSelector": "9e32d261",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferDeposit",
            "parameters": {
              "id": 148,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 139,
                  "mutability": "mutable",
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 173,
                  "src": "2635:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 138,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2635:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 141,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 173,
                  "src": "2659:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 140,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2659:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 143,
                  "mutability": "mutable",
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 173,
                  "src": "2686:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 142,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2686:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 145,
                  "mutability": "mutable",
                  "name": "season",
                  "nodeType": "VariableDeclaration",
                  "scope": 173,
                  "src": "2709:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 144,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2709:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 147,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 173,
                  "src": "2732:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 146,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2732:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2625:127:0"
            },
            "returnParameters": {
              "id": 151,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 150,
                  "mutability": "mutable",
                  "name": "bdv",
                  "nodeType": "VariableDeclaration",
                  "scope": 173,
                  "src": "2779:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 149,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2779:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2778:13:0"
            },
            "scope": 318,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 213,
            "nodeType": "FunctionDefinition",
            "src": "3103:381:0",
            "nodes": [],
            "body": {
              "id": 212,
              "nodeType": "Block",
              "src": "3329:155:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 196,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 193,
                          "name": "sender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 176,
                          "src": "3347:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 194,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "3357:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 195,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3357:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "3347:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "696e76616c69642073656e646572",
                        "id": 197,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3369:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_175ad23f068aed3ab88ee19620d541e9ae3d91161407ed4bb90c97cce31b0783",
                          "typeString": "literal_string \"invalid sender\""
                        },
                        "value": "invalid sender"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_175ad23f068aed3ab88ee19620d541e9ae3d91161407ed4bb90c97cce31b0783",
                          "typeString": "literal_string \"invalid sender\""
                        }
                      ],
                      "id": 192,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3339:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 198,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3339:47:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 199,
                  "nodeType": "ExpressionStatement",
                  "src": "3339:47:0"
                },
                {
                  "expression": {
                    "id": 210,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 200,
                      "name": "bdvs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 190,
                      "src": "3396:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 203,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "3430:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 204,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3430:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "id": 205,
                          "name": "recipient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 178,
                          "src": "3442:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 206,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 180,
                          "src": "3453:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 207,
                          "name": "seasons",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 183,
                          "src": "3460:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint32_$dyn_calldata_ptr",
                            "typeString": "uint32[] calldata"
                          }
                        },
                        {
                          "id": 208,
                          "name": "amounts",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 186,
                          "src": "3469:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                            "typeString": "uint256[] calldata"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_array$_t_uint32_$dyn_calldata_ptr",
                            "typeString": "uint32[] calldata"
                          },
                          {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                            "typeString": "uint256[] calldata"
                          }
                        ],
                        "expression": {
                          "id": 201,
                          "name": "beanstalk",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24,
                          "src": "3403:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IBeanstalk_$2197",
                            "typeString": "contract IBeanstalk"
                          }
                        },
                        "id": 202,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "transferDeposits",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2156,
                        "src": "3403:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint32_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                          "typeString": "function (address,address,address,uint32[] memory,uint256[] memory) payable external returns (uint256[] memory)"
                        }
                      },
                      "id": 209,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3403:74:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "src": "3396:81:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "id": 211,
                  "nodeType": "ExpressionStatement",
                  "src": "3396:81:0"
                }
              ]
            },
            "documentation": {
              "id": 174,
              "nodeType": "StructuredDocumentation",
              "src": "2949:149:0",
              "text": " @notice Execute multiple Beanstalk Deposit transfers of a single Whitelisted Tokens.\n @dev See {SiloFacet-transferDeposits}.*"
            },
            "functionSelector": "0d2615b1",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferDeposits",
            "parameters": {
              "id": 187,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 176,
                  "mutability": "mutable",
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 213,
                  "src": "3138:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 175,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3138:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 178,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 213,
                  "src": "3162:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 177,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3162:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 180,
                  "mutability": "mutable",
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 213,
                  "src": "3189:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 179,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3189:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 183,
                  "mutability": "mutable",
                  "name": "seasons",
                  "nodeType": "VariableDeclaration",
                  "scope": 213,
                  "src": "3212:25:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint32_$dyn_calldata_ptr",
                    "typeString": "uint32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 181,
                      "name": "uint32",
                      "nodeType": "ElementaryTypeName",
                      "src": "3212:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "id": 182,
                    "nodeType": "ArrayTypeName",
                    "src": "3212:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint32_$dyn_storage_ptr",
                      "typeString": "uint32[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 186,
                  "mutability": "mutable",
                  "name": "amounts",
                  "nodeType": "VariableDeclaration",
                  "scope": 213,
                  "src": "3247:26:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 184,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "3247:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 185,
                    "nodeType": "ArrayTypeName",
                    "src": "3247:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3128:151:0"
            },
            "returnParameters": {
              "id": 191,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 190,
                  "mutability": "mutable",
                  "name": "bdvs",
                  "nodeType": "VariableDeclaration",
                  "scope": 213,
                  "src": "3306:21:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 188,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "3306:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 189,
                    "nodeType": "ArrayTypeName",
                    "src": "3306:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3305:23:0"
            },
            "scope": 318,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 247,
            "nodeType": "FunctionDefinition",
            "src": "3682:306:0",
            "nodes": [],
            "body": {
              "id": 246,
              "nodeType": "Block",
              "src": "3901:87:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 236,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 216,
                        "src": "3933:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 237,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 218,
                        "src": "3940:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 238,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 220,
                        "src": "3949:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 239,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 222,
                        "src": "3956:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 240,
                        "name": "deadline",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 224,
                        "src": "3963:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 241,
                        "name": "v",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 226,
                        "src": "3973:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 242,
                        "name": "r",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 228,
                        "src": "3976:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 243,
                        "name": "s",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 230,
                        "src": "3979:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 233,
                        "name": "beanstalk",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24,
                        "src": "3911:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IBeanstalk_$2197",
                          "typeString": "contract IBeanstalk"
                        }
                      },
                      "id": 235,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "permitToken",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2123,
                      "src": "3911:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$",
                        "typeString": "function (address,address,address,uint256,uint256,uint8,bytes32,bytes32) payable external"
                      }
                    },
                    "id": 244,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3911:70:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 245,
                  "nodeType": "ExpressionStatement",
                  "src": "3911:70:0"
                }
              ]
            },
            "documentation": {
              "id": 214,
              "nodeType": "StructuredDocumentation",
              "src": "3536:141:0",
              "text": " @notice Execute a permit for an ERC-20 Token stored in a Beanstalk Farm balance.\n @dev See {TokenFacet-permitToken}.*"
            },
            "functionSelector": "7c516e94",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "permitToken",
            "parameters": {
              "id": 231,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 216,
                  "mutability": "mutable",
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 247,
                  "src": "3712:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 215,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3712:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 218,
                  "mutability": "mutable",
                  "name": "spender",
                  "nodeType": "VariableDeclaration",
                  "scope": 247,
                  "src": "3735:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 217,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3735:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 220,
                  "mutability": "mutable",
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 247,
                  "src": "3760:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 219,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3760:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 222,
                  "mutability": "mutable",
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 247,
                  "src": "3783:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 221,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3783:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 224,
                  "mutability": "mutable",
                  "name": "deadline",
                  "nodeType": "VariableDeclaration",
                  "scope": 247,
                  "src": "3806:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 223,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3806:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 226,
                  "mutability": "mutable",
                  "name": "v",
                  "nodeType": "VariableDeclaration",
                  "scope": 247,
                  "src": "3832:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 225,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "3832:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 228,
                  "mutability": "mutable",
                  "name": "r",
                  "nodeType": "VariableDeclaration",
                  "scope": 247,
                  "src": "3849:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 227,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3849:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 230,
                  "mutability": "mutable",
                  "name": "s",
                  "nodeType": "VariableDeclaration",
                  "scope": 247,
                  "src": "3868:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 229,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3868:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3702:181:0"
            },
            "returnParameters": {
              "id": 232,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3901:0:0"
            },
            "scope": 318,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 281,
            "nodeType": "FunctionDefinition",
            "src": "4139:310:0",
            "nodes": [],
            "body": {
              "id": 280,
              "nodeType": "Block",
              "src": "4360:89:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 270,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 250,
                        "src": "4394:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 271,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 252,
                        "src": "4401:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 272,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 254,
                        "src": "4410:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 273,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 256,
                        "src": "4417:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 274,
                        "name": "deadline",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 258,
                        "src": "4424:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 275,
                        "name": "v",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 260,
                        "src": "4434:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 276,
                        "name": "r",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 262,
                        "src": "4437:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 277,
                        "name": "s",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 264,
                        "src": "4440:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 267,
                        "name": "beanstalk",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24,
                        "src": "4370:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IBeanstalk_$2197",
                          "typeString": "contract IBeanstalk"
                        }
                      },
                      "id": 269,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "permitDeposit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2196,
                      "src": "4370:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$",
                        "typeString": "function (address,address,address,uint256,uint256,uint8,bytes32,bytes32) payable external"
                      }
                    },
                    "id": 278,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4370:72:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 279,
                  "nodeType": "ExpressionStatement",
                  "src": "4370:72:0"
                }
              ]
            },
            "documentation": {
              "id": 248,
              "nodeType": "StructuredDocumentation",
              "src": "3994:140:0",
              "text": " @notice Execute a permit for Beanstalk Deposits of a single Whitelisted Token.\n @dev See {SiloFacet-permitDeposit}.*"
            },
            "functionSelector": "120b5702",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "permitDeposit",
            "parameters": {
              "id": 265,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 250,
                  "mutability": "mutable",
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 281,
                  "src": "4171:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 249,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4171:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 252,
                  "mutability": "mutable",
                  "name": "spender",
                  "nodeType": "VariableDeclaration",
                  "scope": 281,
                  "src": "4194:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 251,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4194:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 254,
                  "mutability": "mutable",
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 281,
                  "src": "4219:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 253,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4219:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 256,
                  "mutability": "mutable",
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 281,
                  "src": "4242:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 255,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4242:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 258,
                  "mutability": "mutable",
                  "name": "deadline",
                  "nodeType": "VariableDeclaration",
                  "scope": 281,
                  "src": "4265:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 257,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4265:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 260,
                  "mutability": "mutable",
                  "name": "v",
                  "nodeType": "VariableDeclaration",
                  "scope": 281,
                  "src": "4291:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 259,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "4291:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 262,
                  "mutability": "mutable",
                  "name": "r",
                  "nodeType": "VariableDeclaration",
                  "scope": 281,
                  "src": "4308:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 261,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4308:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 264,
                  "mutability": "mutable",
                  "name": "s",
                  "nodeType": "VariableDeclaration",
                  "scope": 281,
                  "src": "4327:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 263,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4327:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4161:181:0"
            },
            "returnParameters": {
              "id": 266,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4360:0:0"
            },
            "scope": 318,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 317,
            "nodeType": "FunctionDefinition",
            "src": "4606:338:0",
            "nodes": [],
            "body": {
              "id": 316,
              "nodeType": "Block",
              "src": "4852:92:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 306,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 284,
                        "src": "4887:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 307,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 286,
                        "src": "4894:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 308,
                        "name": "tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 289,
                        "src": "4903:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        }
                      },
                      {
                        "id": 309,
                        "name": "values",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 292,
                        "src": "4911:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        }
                      },
                      {
                        "id": 310,
                        "name": "deadline",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 294,
                        "src": "4919:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 311,
                        "name": "v",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 296,
                        "src": "4929:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 312,
                        "name": "r",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 298,
                        "src": "4932:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 313,
                        "name": "s",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 300,
                        "src": "4935:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 303,
                        "name": "beanstalk",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24,
                        "src": "4862:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IBeanstalk_$2197",
                          "typeString": "contract IBeanstalk"
                        }
                      },
                      "id": 305,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "permitDeposits",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2177,
                      "src": "4862:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$_t_address_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$",
                        "typeString": "function (address,address,address[] memory,uint256[] memory,uint256,uint8,bytes32,bytes32) payable external"
                      }
                    },
                    "id": 314,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4862:75:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 315,
                  "nodeType": "ExpressionStatement",
                  "src": "4862:75:0"
                }
              ]
            },
            "documentation": {
              "id": 282,
              "nodeType": "StructuredDocumentation",
              "src": "4455:146:0",
              "text": " @notice Execute a permit for a Beanstalk Deposits of a multiple Whitelisted Tokens.\n @dev See {SiloFacet-permitDeposits}.*"
            },
            "functionSelector": "d5770dc7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "permitDeposits",
            "parameters": {
              "id": 301,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 284,
                  "mutability": "mutable",
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 317,
                  "src": "4639:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 283,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4639:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 286,
                  "mutability": "mutable",
                  "name": "spender",
                  "nodeType": "VariableDeclaration",
                  "scope": 317,
                  "src": "4662:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 285,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4662:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 289,
                  "mutability": "mutable",
                  "name": "tokens",
                  "nodeType": "VariableDeclaration",
                  "scope": 317,
                  "src": "4687:25:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 287,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "4687:7:0",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 288,
                    "nodeType": "ArrayTypeName",
                    "src": "4687:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 292,
                  "mutability": "mutable",
                  "name": "values",
                  "nodeType": "VariableDeclaration",
                  "scope": 317,
                  "src": "4722:25:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 290,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "4722:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 291,
                    "nodeType": "ArrayTypeName",
                    "src": "4722:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 294,
                  "mutability": "mutable",
                  "name": "deadline",
                  "nodeType": "VariableDeclaration",
                  "scope": 317,
                  "src": "4757:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 293,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4757:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 296,
                  "mutability": "mutable",
                  "name": "v",
                  "nodeType": "VariableDeclaration",
                  "scope": 317,
                  "src": "4783:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 295,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "4783:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 298,
                  "mutability": "mutable",
                  "name": "r",
                  "nodeType": "VariableDeclaration",
                  "scope": 317,
                  "src": "4800:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 297,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4800:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 300,
                  "mutability": "mutable",
                  "name": "s",
                  "nodeType": "VariableDeclaration",
                  "scope": 317,
                  "src": "4819:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 299,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4819:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4629:205:0"
            },
            "returnParameters": {
              "id": 302,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4852:0:0"
            },
            "scope": 318,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 13,
              "name": "DepotFacet",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1936,
              "src": "812:10:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_DepotFacet_$1936",
                "typeString": "contract DepotFacet"
              }
            },
            "id": 14,
            "nodeType": "InheritanceSpecifier",
            "src": "812:10:0"
          },
          {
            "baseName": {
              "id": 15,
              "name": "TokenSupportFacet",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2078,
              "src": "824:17:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TokenSupportFacet_$2078",
                "typeString": "contract TokenSupportFacet"
              }
            },
            "id": 16,
            "nodeType": "InheritanceSpecifier",
            "src": "824:17:0"
          }
        ],
        "contractDependencies": [
          1936,
          2078
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 12,
          "nodeType": "StructuredDocumentation",
          "src": "518:274:0",
          "text": " @title Depot\n @author Publius\n @notice Depot wraps Pipeline's Pipe functions to facilitate the loading of non-Ether assets in Pipeline\n in the same transaction that loads Ether, Pipes calls to other protocols and unloads Pipeline.\n https://evmpipeline.org*"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          318,
          2078,
          1936
        ],
        "name": "Depot",
        "scope": 319
      }
    ],
    "license": "MIT"
  },
  "id": 0
}